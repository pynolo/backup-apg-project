package it.giunti.apg.core.servlet;

import it.giunti.apg.core.VisualLogger;
import it.giunti.apg.core.ServerConstants;
import it.giunti.apg.core.business.AvvisiBusiness;
import it.giunti.apg.core.business.FileFormatComunicazioni;
import it.giunti.apg.core.business.FtpUtil;
import it.giunti.apg.core.business.OutputComunicazioniBusiness;
import it.giunti.apg.core.business.OutputInvioBusiness;
import it.giunti.apg.core.business.SortBusiness;
import it.giunti.apg.shared.AppConstants;
import it.giunti.apg.shared.BusinessException;
import it.giunti.apg.shared.EmptyResultException;
import it.giunti.apg.shared.FileException;
import it.giunti.apg.shared.ValueUtil;
import it.giunti.apg.shared.model.EvasioniComunicazioni;
import it.giunti.apg.shared.model.Fascicoli;

import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;

public class OutputComunicazioniServlet extends HttpServlet {
	private static final long serialVersionUID = -4890415376184450847L;
	
	private static final Logger LOG = LoggerFactory.getLogger(OutputComunicazioniServlet.class);
	private static final String TRUE = "true";
	
	public OutputComunicazioniServlet() {
		super();
	}

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		Date date = new Date();
		Integer idRapporto = ValueUtil.stoi(req.getParameter(AppConstants.PARAM_ID_RAPPORTO));
		String extractBolParam = req.getParameter(AppConstants.PARAM_EXTRACT_MEDIA_BOL);
		String extractLetParam = req.getParameter(AppConstants.PARAM_EXTRACT_MEDIA_LET);
		String extractNddParam = req.getParameter(AppConstants.PARAM_EXTRACT_MEDIA_NDD);
		String extractEmailParam = req.getParameter(AppConstants.PARAM_EXTRACT_MEDIA_EMAIL);
		Integer idPeriodicoParam = ValueUtil.stoi(req.getParameter(AppConstants.PARAM_ID_PERIODICO));
		String comSyncParam = req.getParameter(AppConstants.PARAM_EXTRACT_COM_SYNC);
		Integer idFascParam = ValueUtil.stoi(req.getParameter(AppConstants.PARAM_ID_FASCICOLO));
		String comEventParam = req.getParameter(AppConstants.PARAM_EXTRACT_COM_QUEUE);
		String comManualParam = req.getParameter(AppConstants.PARAM_EXTRACT_COM_MANUAL);
		String scriviDbParam = req.getParameter(AppConstants.PARAM_SCRIVI_DB);
		String idUtente = req.getParameter(AppConstants.PARAM_ID_UTENTE);
		Logger.get().addHtmlLogLine(idRapporto, "Estrazione destinatari in corso");
		boolean extractBol = false;
		if (extractBolParam != null) {
			if (extractBolParam.equals(TRUE)) {
				extractBol=true;
			}
		}
		boolean extractLet = false;
		if (extractLetParam != null) {
			if (extractLetParam.equals(TRUE)) {
				extractLet=true;
			}
		}
		boolean extractNdd = false;
		if (extractNddParam != null) {
			if (extractNddParam.equals(TRUE)) {
				extractNdd=true;
			}
		}
		boolean extractEmail = false;
		if (extractEmailParam != null) {
			if (extractEmailParam.equals(TRUE)) {
				extractEmail=true;
			}
		}
		boolean comSync = false;
		if (comSyncParam != null) {
			if (comSyncParam.equals(TRUE)) {
				comSync=true;
			}
		}
		boolean comEvent = false;
		if (comEventParam != null) {
			if (comEventParam.equals(TRUE)) {
				comEvent=true;
			}
		}
		boolean comManual = false;
		if (comManualParam != null) {
			if (comManualParam.equals(TRUE)) {
				comManual=true;
			}
		}
		boolean scriviDb = false;
		if (scriviDbParam != null) {
			if (scriviDbParam.equals(TRUE)) {
				scriviDb=true;
			}
		}
		if ((idUtente != null) && (idPeriodicoParam != null) && (idFascParam != null) && (idRapporto != null)) {
			if (idUtente.length()>0) {
				prepareResponse(resp, date,
						extractBol, extractLet, extractNdd, extractEmail,
						idPeriodicoParam, comSync, idFascParam,
						comEvent, comManual, scriviDb, idRapporto, idUtente, scriviDb);
			}
		}
		Logger.get().closeAndSaveRapporto(idRapporto);
	}
	
	private void prepareResponse(HttpServletResponse resp, 
			Date date,
			boolean extractBol, boolean extractLet,
			boolean extractNdd, boolean extractEmail,
			Integer idPeriodico, boolean comSync, Integer idFas,
			boolean comEvent, boolean comManual,
			boolean scriviDb, int idRapporto,
			String idUtente, boolean writeToDb) {
		int BUFSIZE = 2048;
		Date today = new Date();
		try {
			Fascicoli fascicolo = OutputInvioBusiness.findFascicoloById(idFas, idRapporto);
			Logger.get().addHtmlLogLine(idRapporto, "Creazione file");
			File f = File.createTempFile("destinatariCom"+idPeriodico, ".txt");
			f.deleteOnExit();
			// Set the response and go!
			
			String timestamp = ServerConstants.FORMAT_FILE_NAME_TIMESTAMP.format(today);
			String fileName = timestamp + " ";
			if (extractBol) fileName += "Bollettini ";
			if (extractLet) fileName += "Lettere ";
			if (extractNdd) fileName += "Note di debito ";
			if (extractEmail) fileName += "Email ";
			if ((fascicolo != null) && comSync) fileName += fascicolo.getNumeroFascicolo()+" ";
			fileName +=	fascicolo.getPeriodico().getNome()+".txt";
			// Extract destinatari
			List<EvasioniComunicazioni> ecList = OutputComunicazioniBusiness.extractEvasioniComunicazioni(
					date,
					extractBol, extractLet, extractNdd, extractEmail,
					idPeriodico, comSync, idFas,
					comEvent, comManual,
					idRapporto, idUtente);
			//Titolo log
			String tipo = "";
			if (extractBol) tipo += "bollettini ";
			if (extractLet) tipo += "lettere ";
			if (extractNdd) tipo += "note di debito ";
			if (extractEmail) tipo += "email ";
			String avviso = "Evasione "+tipo+" per '"+
					ecList.get(0).getIstanzaAbbonamento().getAbbonamento().getPeriodico().getNome()+"'";
			Logger.get().setLogTitle(idRapporto, avviso);
			//Ordinamento secondo cap e nazione
			Logger.get().addHtmlLogLine(idRapporto, "Ordinamento per cap e nazione");
			new SortBusiness().sortEvasioniComunicazioni(ecList);
			//Formattazione dati
			Logger.get().addHtmlLogLine(idRapporto, "Formattazione dati");
			FileFormatComunicazioni.formatEvasioniComunicazioni(f, ecList, idRapporto);
			
			try {
				// Stream to the requester
				int length = 0;
				ServletOutputStream op = resp.getOutputStream();
				resp.setContentType("application/octet-stream");
				resp.setHeader( "Content-Disposition", "attachment; filename=\"" + fileName + "\"" );
				byte[] bbuf = new byte[BUFSIZE];
				DataInputStream in = new DataInputStream(new FileInputStream(f));
				Logger.get().addHtmlLogLine(idRapporto, "Invio file via http");
				while ((in != null) && ((length = in.read(bbuf)) != -1)) {
				    op.write(bbuf,0,length);
				}
				in.close();
				op.flush();
				op.close();
				resp.setContentLength( (int)f.length() );
			} catch (Exception e) { 
				LOG.error(e.getMessage(), e);
				Logger.get().addHtmlLogLine(idRapporto, "Http file transfer error: "+e.getMessage());
			}
				
			//send file via Ftp and write on db
			if (ecList != null) {
				if (ecList.size() > 0) {
					Logger.get().addHtmlLogLine(idRapporto, "Estratte "+ecList.size()+" comunicazioni");
					if (writeToDb) {
						Logger.get().addHtmlLogLine(idRapporto, "Ftp del file");
						String ftpHost = new FtpBusiness().completeFileTransfer(f, fileName);
						Logger.get().addHtmlLogLine(idRapporto, "File trasferito su "+ftpHost);
						OutputComunicazioniBusiness.writeEvasioniComunicazioniOnDb(ecList, today,
								idRapporto, idUtente);
						AvvisiBusiness.writeAvviso(avviso, false, idUtente);
					}
				}
			}
		} catch (EmptyResultException e) { 
			LOG.info(e.getMessage(), e);
			Logger.get().addHtmlLogLine(idRapporto, "Nessun dato da estrarre - "+e.getMessage());
		} catch (IOException e) {
			LOG.error(e.getMessage(), e);
			Logger.get().addHtmlLogLine(idRapporto, "IO ERROR: "+e.getMessage());
		} catch (DatabaseException e) { 
			LOG.error(e.getMessage(), e);
			Logger.get().addHtmlLogLine(idRapporto, "DB ERROR: "+e.getMessage());
		} catch (FileException e) { 
			LOG.error(e.getMessage(), e);
			Logger.get().addHtmlLogLine(idRapporto, "FILESYSTEM ERROR: "+e.getMessage());
		}
	}
	
}