package it.giunti.apg.soap.fattele;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.7
 * 2020-09-23T08:35:30.894+02:00
 * Generated source version: 3.3.7
 *
 */
@WebServiceClient(name = "INVOICE_E_OUTService",
                  wsdlLocation = "/wsdl/IF_017_002_fattele.wsdl",
                  targetNamespace = "urn:giuntieditore.com:INTERNAL:0032_SALES_INVOICE.E_ABB")
public class INVOICEEOUTService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:giuntieditore.com:INTERNAL:0032_SALES_INVOICE.E_ABB", "INVOICE_E_OUTService");
    public final static QName HTTPSPort = new QName("urn:giuntieditore.com:INTERNAL:0032_SALES_INVOICE.E_ABB", "HTTPS_Port");
    public final static QName HTTPPort = new QName("urn:giuntieditore.com:INTERNAL:0032_SALES_INVOICE.E_ABB", "HTTP_Port");
    static {
        URL url = null;
        try {
            url = new URL("/wsdl/IF_017_002_fattele.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(INVOICEEOUTService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "/wsdl/IF_017_002_fattele.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public INVOICEEOUTService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public INVOICEEOUTService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public INVOICEEOUTService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public INVOICEEOUTService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public INVOICEEOUTService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public INVOICEEOUTService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns INVOICEEOUT
     */
    @WebEndpoint(name = "HTTPS_Port")
    public INVOICEEOUT getHTTPSPort() {
        return super.getPort(HTTPSPort, INVOICEEOUT.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns INVOICEEOUT
     */
    @WebEndpoint(name = "HTTPS_Port")
    public INVOICEEOUT getHTTPSPort(WebServiceFeature... features) {
        return super.getPort(HTTPSPort, INVOICEEOUT.class, features);
    }


    /**
     *
     * @return
     *     returns INVOICEEOUT
     */
    @WebEndpoint(name = "HTTP_Port")
    public INVOICEEOUT getHTTPPort() {
        return super.getPort(HTTPPort, INVOICEEOUT.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns INVOICEEOUT
     */
    @WebEndpoint(name = "HTTP_Port")
    public INVOICEEOUT getHTTPPort(WebServiceFeature... features) {
        return super.getPort(HTTPPort, INVOICEEOUT.class, features);
    }

}
