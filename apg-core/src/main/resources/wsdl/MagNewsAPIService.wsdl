<?xml version="1.0" encoding="UTF-8"?>
<!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.3.0 svn-revision#3528ea595bd29309f69172d231bbce272d21035c. -->
<!-- Generated by JAX-WS RI (http://javaee.github.io/metro-jax-ws). RI's version is JAX-WS RI 2.3.0 svn-revision#3528ea595bd29309f69172d231bbce272d21035c. -->
<definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://webservices.magnews/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://webservices.magnews/" name="MagNewsAPIService">
<wsp:Policy wsu:Id="MagNewsAPIPortBinding_MTOM_Policy">
<ns1:OptimizedMimeSerialization xmlns:ns1="http://schemas.xmlsoap.org/ws/2004/09/policy/optimizedmimeserialization" wsp:Optional="true"/>
</wsp:Policy>
<types>
<xsd:schema>
<xsd:import namespace="http://webservices.magnews/" schemaLocation="https://ws-mn1.mag-news.it:443/ws/MagNewsAPIService?xsd=1"/>
</xsd:schema>
</types>
<message name="getVersion">
<part name="parameters" element="tns:getVersion"/>
</message>
<message name="getVersionResponse">
<part name="parameters" element="tns:getVersionResponse"/>
</message>
<message name="AuthenticationFailedException">
<part name="fault" element="tns:AuthenticationFailedException"/>
</message>
<message name="ServiceNotAvailableException">
<part name="fault" element="tns:ServiceNotAvailableException"/>
</message>
<message name="addDataToContactsRowsSetFromFile">
<part name="parameters" element="tns:addDataToContactsRowsSetFromFile"/>
</message>
<message name="addDataToContactsRowsSetFromFileResponse">
<part name="parameters" element="tns:addDataToContactsRowsSetFromFileResponse"/>
</message>
<message name="attachFileToNewsletter">
<part name="parameters" element="tns:attachFileToNewsletter"/>
</message>
<message name="attachFileToNewsletterResponse">
<part name="parameters" element="tns:attachFileToNewsletterResponse"/>
</message>
<message name="batchFindContactByFilter">
<part name="parameters" element="tns:batchFindContactByFilter"/>
</message>
<message name="batchFindContactByFilterResponse">
<part name="parameters" element="tns:batchFindContactByFilterResponse"/>
</message>
<message name="sendEmailMessage">
<part name="parameters" element="tns:sendEmailMessage"/>
</message>
<message name="sendEmailMessageResponse">
<part name="parameters" element="tns:sendEmailMessageResponse"/>
</message>
<message name="InvalidMessageException">
<part name="fault" element="tns:InvalidMessageException"/>
</message>
<message name="batchSendOnDemandMessage">
<part name="parameters" element="tns:batchSendOnDemandMessage"/>
</message>
<message name="batchSendOnDemandMessageResponse">
<part name="parameters" element="tns:batchSendOnDemandMessageResponse"/>
</message>
<message name="batchSendSimpleMessage">
<part name="parameters" element="tns:batchSendSimpleMessage"/>
</message>
<message name="batchSendSimpleMessageResponse">
<part name="parameters" element="tns:batchSendSimpleMessageResponse"/>
</message>
<message name="batchCancelSimpleMessages">
<part name="parameters" element="tns:batchCancelSimpleMessages"/>
</message>
<message name="batchCancelSimpleMessagesResponse">
<part name="parameters" element="tns:batchCancelSimpleMessagesResponse"/>
</message>
<message name="batchSendEmailMessage">
<part name="parameters" element="tns:batchSendEmailMessage"/>
</message>
<message name="batchSendEmailMessageResponse">
<part name="parameters" element="tns:batchSendEmailMessageResponse"/>
</message>
<message name="batchSendSmsMessage">
<part name="parameters" element="tns:batchSendSmsMessage"/>
</message>
<message name="batchSendSmsMessageResponse">
<part name="parameters" element="tns:batchSendSmsMessageResponse"/>
</message>
<message name="sendSmsMessage">
<part name="parameters" element="tns:sendSmsMessage"/>
</message>
<message name="sendSmsMessageResponse">
<part name="parameters" element="tns:sendSmsMessageResponse"/>
</message>
<message name="batchSendSingleNewsletter">
<part name="parameters" element="tns:batchSendSingleNewsletter"/>
</message>
<message name="batchSendSingleNewsletterResponse">
<part name="parameters" element="tns:batchSendSingleNewsletterResponse"/>
</message>
<message name="batchSubscribeContactToList">
<part name="parameters" element="tns:batchSubscribeContactToList"/>
</message>
<message name="batchSubscribeContactToListResponse">
<part name="parameters" element="tns:batchSubscribeContactToListResponse"/>
</message>
<message name="batchUnsubscribeContactFromList">
<part name="parameters" element="tns:batchUnsubscribeContactFromList"/>
</message>
<message name="batchUnsubscribeContactFromListResponse">
<part name="parameters" element="tns:batchUnsubscribeContactFromListResponse"/>
</message>
<message name="calculateContactReport">
<part name="parameters" element="tns:calculateContactReport"/>
</message>
<message name="calculateContactReportResponse">
<part name="parameters" element="tns:calculateContactReportResponse"/>
</message>
<message name="callApplication">
<part name="parameters" element="tns:callApplication"/>
</message>
<message name="callApplicationResponse">
<part name="parameters" element="tns:callApplicationResponse"/>
</message>
<message name="createContactRowSet">
<part name="parameters" element="tns:createContactRowSet"/>
</message>
<message name="createContactRowSetResponse">
<part name="parameters" element="tns:createContactRowSetResponse"/>
</message>
<message name="createCustomDataRowSet">
<part name="parameters" element="tns:createCustomDataRowSet"/>
</message>
<message name="createCustomDataRowSetResponse">
<part name="parameters" element="tns:createCustomDataRowSetResponse"/>
</message>
<message name="addDataToCustomDataRowsSetFromFile">
<part name="parameters" element="tns:addDataToCustomDataRowsSetFromFile"/>
</message>
<message name="addDataToCustomDataRowsSetFromFileResponse">
<part name="parameters" element="tns:addDataToCustomDataRowsSetFromFileResponse"/>
</message>
<message name="startBatchCustomTableUpdate">
<part name="parameters" element="tns:startBatchCustomTableUpdate"/>
</message>
<message name="startBatchCustomTableUpdateResponse">
<part name="parameters" element="tns:startBatchCustomTableUpdateResponse"/>
</message>
<message name="cancelBatch">
<part name="parameters" element="tns:cancelBatch"/>
</message>
<message name="cancelBatchResponse">
<part name="parameters" element="tns:cancelBatchResponse"/>
</message>
<message name="addDataToContactsRowsSet">
<part name="parameters" element="tns:addDataToContactsRowsSet"/>
</message>
<message name="addDataToContactsRowsSetResponse">
<part name="parameters" element="tns:addDataToContactsRowsSetResponse"/>
</message>
<message name="uploadMedia">
<part name="parameters" element="tns:uploadMedia"/>
</message>
<message name="uploadMediaResponse">
<part name="parameters" element="tns:uploadMediaResponse"/>
</message>
<message name="downloadMedia">
<part name="parameters" element="tns:downloadMedia"/>
</message>
<message name="downloadMediaResponse">
<part name="parameters" element="tns:downloadMediaResponse"/>
</message>
<message name="findMediaByName">
<part name="parameters" element="tns:findMediaByName"/>
</message>
<message name="findMediaByNameResponse">
<part name="parameters" element="tns:findMediaByNameResponse"/>
</message>
<message name="createCustomContentType">
<part name="parameters" element="tns:createCustomContentType"/>
</message>
<message name="createCustomContentTypeResponse">
<part name="parameters" element="tns:createCustomContentTypeResponse"/>
</message>
<message name="createField">
<part name="parameters" element="tns:createField"/>
</message>
<message name="createFieldResponse">
<part name="parameters" element="tns:createFieldResponse"/>
</message>
<message name="updateNewsletter">
<part name="parameters" element="tns:updateNewsletter"/>
</message>
<message name="updateNewsletterResponse">
<part name="parameters" element="tns:updateNewsletterResponse"/>
</message>
<message name="createSimpleStaticGroup">
<part name="parameters" element="tns:createSimpleStaticGroup"/>
</message>
<message name="createSimpleStaticGroupResponse">
<part name="parameters" element="tns:createSimpleStaticGroupResponse"/>
</message>
<message name="createStaticGroupFromQuery">
<part name="parameters" element="tns:createStaticGroupFromQuery"/>
</message>
<message name="createStaticGroupFromQueryResponse">
<part name="parameters" element="tns:createStaticGroupFromQueryResponse"/>
</message>
<message name="createDynamicGroupFromQuery">
<part name="parameters" element="tns:createDynamicGroupFromQuery"/>
</message>
<message name="createDynamicGroupFromQueryResponse">
<part name="parameters" element="tns:createDynamicGroupFromQueryResponse"/>
</message>
<message name="createStaticGroupFromNewsletterTarget">
<part name="parameters" element="tns:createStaticGroupFromNewsletterTarget"/>
</message>
<message name="createStaticGroupFromNewsletterTargetResponse">
<part name="parameters" element="tns:createStaticGroupFromNewsletterTargetResponse"/>
</message>
<message name="createSimpleList">
<part name="parameters" element="tns:createSimpleList"/>
</message>
<message name="createSimpleListResponse">
<part name="parameters" element="tns:createSimpleListResponse"/>
</message>
<message name="createSimpleSurvey">
<part name="parameters" element="tns:createSimpleSurvey"/>
</message>
<message name="createSimpleSurveyResponse">
<part name="parameters" element="tns:createSimpleSurveyResponse"/>
</message>
<message name="deleteCustomContentType">
<part name="parameters" element="tns:deleteCustomContentType"/>
</message>
<message name="deleteCustomContentTypeResponse">
<part name="parameters" element="tns:deleteCustomContentTypeResponse"/>
</message>
<message name="destroyRowSetInfo">
<part name="parameters" element="tns:destroyRowSetInfo"/>
</message>
<message name="destroyRowSetInfoResponse">
<part name="parameters" element="tns:destroyRowSetInfoResponse"/>
</message>
<message name="downloadContent">
<part name="parameters" element="tns:downloadContent"/>
</message>
<message name="downloadContentResponse">
<part name="parameters" element="tns:downloadContentResponse"/>
</message>
<message name="executeFormSubmission">
<part name="parameters" element="tns:executeFormSubmission"/>
</message>
<message name="executeFormSubmissionResponse">
<part name="parameters" element="tns:executeFormSubmissionResponse"/>
</message>
<message name="fetchBatchContactsUpdateReport">
<part name="parameters" element="tns:fetchBatchContactsUpdateReport"/>
</message>
<message name="fetchBatchContactsUpdateReportResponse">
<part name="parameters" element="tns:fetchBatchContactsUpdateReportResponse"/>
</message>
<message name="fetchBatchCustomDataUpdateReport">
<part name="parameters" element="tns:fetchBatchCustomDataUpdateReport"/>
</message>
<message name="fetchBatchCustomDataUpdateReportResponse">
<part name="parameters" element="tns:fetchBatchCustomDataUpdateReportResponse"/>
</message>
<message name="fetchContacts">
<part name="parameters" element="tns:fetchContacts"/>
</message>
<message name="fetchContactsResponse">
<part name="parameters" element="tns:fetchContactsResponse"/>
</message>
<message name="fetchContactsReport">
<part name="parameters" element="tns:fetchContactsReport"/>
</message>
<message name="fetchContactsReportResponse">
<part name="parameters" element="tns:fetchContactsReportResponse"/>
</message>
<message name="fetchDeliveryStatus">
<part name="parameters" element="tns:fetchDeliveryStatus"/>
</message>
<message name="fetchDeliveryStatusResponse">
<part name="parameters" element="tns:fetchDeliveryStatusResponse"/>
</message>
<message name="fetchDetailedContactReport">
<part name="parameters" element="tns:fetchDetailedContactReport"/>
</message>
<message name="fetchDetailedContactReportResponse">
<part name="parameters" element="tns:fetchDetailedContactReportResponse"/>
</message>
<message name="fetchDetailedContactSMSReport">
<part name="parameters" element="tns:fetchDetailedContactSMSReport"/>
</message>
<message name="fetchDetailedContactSMSReportResponse">
<part name="parameters" element="tns:fetchDetailedContactSMSReportResponse"/>
</message>
<message name="fetchDetailedNewsletterReport">
<part name="parameters" element="tns:fetchDetailedNewsletterReport"/>
</message>
<message name="fetchDetailedNewsletterReportResponse">
<part name="parameters" element="tns:fetchDetailedNewsletterReportResponse"/>
</message>
<message name="fetchFormSubmissions">
<part name="parameters" element="tns:fetchFormSubmissions"/>
</message>
<message name="fetchFormSubmissionsResponse">
<part name="parameters" element="tns:fetchFormSubmissionsResponse"/>
</message>
<message name="fetchNewsletters">
<part name="parameters" element="tns:fetchNewsletters"/>
</message>
<message name="fetchNewslettersResponse">
<part name="parameters" element="tns:fetchNewslettersResponse"/>
</message>
<message name="fetchSurveySessions">
<part name="parameters" element="tns:fetchSurveySessions"/>
</message>
<message name="fetchSurveySessionsResponse">
<part name="parameters" element="tns:fetchSurveySessionsResponse"/>
</message>
<message name="findContactListSubscriptionToList">
<part name="parameters" element="tns:findContactListSubscriptionToList"/>
</message>
<message name="findContactListSubscriptionToListResponse">
<part name="parameters" element="tns:findContactListSubscriptionToListResponse"/>
</message>
<message name="findCustomContentTypeById">
<part name="parameters" element="tns:findCustomContentTypeById"/>
</message>
<message name="findCustomContentTypeByIdResponse">
<part name="parameters" element="tns:findCustomContentTypeByIdResponse"/>
</message>
<message name="batchFindContactById">
<part name="parameters" element="tns:batchFindContactById"/>
</message>
<message name="batchFindContactByIdResponse">
<part name="parameters" element="tns:batchFindContactByIdResponse"/>
</message>
<message name="batchFindContactByPrimaryKey">
<part name="parameters" element="tns:batchFindContactByPrimaryKey"/>
</message>
<message name="batchFindContactByPrimaryKeyResponse">
<part name="parameters" element="tns:batchFindContactByPrimaryKeyResponse"/>
</message>
<message name="batchFindContactByPrimaryKeyEx">
<part name="parameters" element="tns:batchFindContactByPrimaryKeyEx"/>
</message>
<message name="batchFindContactByPrimaryKeyExResponse">
<part name="parameters" element="tns:batchFindContactByPrimaryKeyExResponse"/>
</message>
<message name="batchFindContactListSubscriptionToList">
<part name="parameters" element="tns:batchFindContactListSubscriptionToList"/>
</message>
<message name="batchFindContactListSubscriptionToListResponse">
<part name="parameters" element="tns:batchFindContactListSubscriptionToListResponse"/>
</message>
<message name="batchGetMessageStatus">
<part name="parameters" element="tns:batchGetMessageStatus"/>
</message>
<message name="batchGetMessageStatusResponse">
<part name="parameters" element="tns:batchGetMessageStatusResponse"/>
</message>
<message name="batchGetSimpleMessageStatus">
<part name="parameters" element="tns:batchGetSimpleMessageStatus"/>
</message>
<message name="batchGetSimpleMessageStatusResponse">
<part name="parameters" element="tns:batchGetSimpleMessageStatusResponse"/>
</message>
<message name="batchGetSimpleMessageStatusByExternalId">
<part name="parameters" element="tns:batchGetSimpleMessageStatusByExternalId"/>
</message>
<message name="batchGetSimpleMessageStatusByExternalIdResponse">
<part name="parameters" element="tns:batchGetSimpleMessageStatusByExternalIdResponse"/>
</message>
<message name="batchMergeContactAndSendOnDemandMessage">
<part name="parameters" element="tns:batchMergeContactAndSendOnDemandMessage"/>
</message>
<message name="batchMergeContactAndSendOnDemandMessageResponse">
<part name="parameters" element="tns:batchMergeContactAndSendOnDemandMessageResponse"/>
</message>
<message name="findFieldByName">
<part name="parameters" element="tns:findFieldByName"/>
</message>
<message name="findFieldByNameResponse">
<part name="parameters" element="tns:findFieldByNameResponse"/>
</message>
<message name="findListById">
<part name="parameters" element="tns:findListById"/>
</message>
<message name="findListByIdResponse">
<part name="parameters" element="tns:findListByIdResponse"/>
</message>
<message name="getActiveDeliveryStatus">
<part name="parameters" element="tns:getActiveDeliveryStatus"/>
</message>
<message name="getActiveDeliveryStatusResponse">
<part name="parameters" element="tns:getActiveDeliveryStatusResponse"/>
</message>
<message name="getAllContentTags">
<part name="parameters" element="tns:getAllContentTags"/>
</message>
<message name="getAllContentTagsResponse">
<part name="parameters" element="tns:getAllContentTagsResponse"/>
</message>
<message name="getAllWebDomains">
<part name="parameters" element="tns:getAllWebDomains"/>
</message>
<message name="getAllWebDomainsResponse">
<part name="parameters" element="tns:getAllWebDomainsResponse"/>
</message>
<message name="getAllFieldsInPage">
<part name="parameters" element="tns:getAllFieldsInPage"/>
</message>
<message name="getAllFieldsInPageResponse">
<part name="parameters" element="tns:getAllFieldsInPageResponse"/>
</message>
<message name="getAllFieldsInSurvey">
<part name="parameters" element="tns:getAllFieldsInSurvey"/>
</message>
<message name="getAllFieldsInSurveyResponse">
<part name="parameters" element="tns:getAllFieldsInSurveyResponse"/>
</message>
<message name="getAllSurveys">
<part name="parameters" element="tns:getAllSurveys"/>
</message>
<message name="getAllSurveysResponse">
<part name="parameters" element="tns:getAllSurveysResponse"/>
</message>
<message name="getAllWebSites">
<part name="parameters" element="tns:getAllWebSites"/>
</message>
<message name="getAllWebSitesResponse">
<part name="parameters" element="tns:getAllWebSitesResponse"/>
</message>
<message name="getBasicDatabaseReport">
<part name="parameters" element="tns:getBasicDatabaseReport"/>
</message>
<message name="getBasicDatabaseReportResponse">
<part name="parameters" element="tns:getBasicDatabaseReportResponse"/>
</message>
<message name="getBasicNewsletterReport">
<part name="parameters" element="tns:getBasicNewsletterReport"/>
</message>
<message name="getBasicNewsletterReportResponse">
<part name="parameters" element="tns:getBasicNewsletterReportResponse"/>
</message>
<message name="getNewsletterReport">
<part name="parameters" element="tns:getNewsletterReport"/>
</message>
<message name="getNewsletterReportResponse">
<part name="parameters" element="tns:getNewsletterReportResponse"/>
</message>
<message name="getBatchStatusInfo">
<part name="parameters" element="tns:getBatchStatusInfo"/>
</message>
<message name="getBatchStatusInfoResponse">
<part name="parameters" element="tns:getBatchStatusInfoResponse"/>
</message>
<message name="getDeliveryStatus">
<part name="parameters" element="tns:getDeliveryStatus"/>
</message>
<message name="getDeliveryStatusResponse">
<part name="parameters" element="tns:getDeliveryStatusResponse"/>
</message>
<message name="getDeliveryStatusForNewsletter">
<part name="parameters" element="tns:getDeliveryStatusForNewsletter"/>
</message>
<message name="getDeliveryStatusForNewsletterResponse">
<part name="parameters" element="tns:getDeliveryStatusForNewsletterResponse"/>
</message>
<message name="getFieldsByDatabase">
<part name="parameters" element="tns:getFieldsByDatabase"/>
</message>
<message name="getFieldsByDatabaseResponse">
<part name="parameters" element="tns:getFieldsByDatabaseResponse"/>
</message>
<message name="getGroupsByDatabase">
<part name="parameters" element="tns:getGroupsByDatabase"/>
</message>
<message name="getGroupsByDatabaseResponse">
<part name="parameters" element="tns:getGroupsByDatabaseResponse"/>
</message>
<message name="getListsByDatabase">
<part name="parameters" element="tns:getListsByDatabase"/>
</message>
<message name="getListsByDatabaseResponse">
<part name="parameters" element="tns:getListsByDatabaseResponse"/>
</message>
<message name="getMessageStatus">
<part name="parameters" element="tns:getMessageStatus"/>
</message>
<message name="getMessageStatusResponse">
<part name="parameters" element="tns:getMessageStatusResponse"/>
</message>
<message name="getNewsletterDetails">
<part name="parameters" element="tns:getNewsletterDetails"/>
</message>
<message name="getNewsletterDetailsResponse">
<part name="parameters" element="tns:getNewsletterDetailsResponse"/>
</message>
<message name="getNewsletterWebVersionLink">
<part name="parameters" element="tns:getNewsletterWebVersionLink"/>
</message>
<message name="getNewsletterWebVersionLinkResponse">
<part name="parameters" element="tns:getNewsletterWebVersionLinkResponse"/>
</message>
<message name="getRowSetInfo">
<part name="parameters" element="tns:getRowSetInfo"/>
</message>
<message name="getRowSetInfoResponse">
<part name="parameters" element="tns:getRowSetInfoResponse"/>
</message>
<message name="getSimpleMessageStatus">
<part name="parameters" element="tns:getSimpleMessageStatus"/>
</message>
<message name="getSimpleMessageStatusResponse">
<part name="parameters" element="tns:getSimpleMessageStatusResponse"/>
</message>
<message name="getWebPageLink">
<part name="parameters" element="tns:getWebPageLink"/>
</message>
<message name="getWebPageLinkResponse">
<part name="parameters" element="tns:getWebPageLinkResponse"/>
</message>
<message name="fillNewsletter">
<part name="parameters" element="tns:fillNewsletter"/>
</message>
<message name="fillNewsletterResponse">
<part name="parameters" element="tns:fillNewsletterResponse"/>
</message>
<message name="insertContentInWebPage">
<part name="parameters" element="tns:insertContentInWebPage"/>
</message>
<message name="insertContentInWebPageResponse">
<part name="parameters" element="tns:insertContentInWebPageResponse"/>
</message>
<message name="mergeContact">
<part name="parameters" element="tns:mergeContact"/>
</message>
<message name="mergeContactResponse">
<part name="parameters" element="tns:mergeContactResponse"/>
</message>
<message name="mergeContactAndSendOnDemandMessage">
<part name="parameters" element="tns:mergeContactAndSendOnDemandMessage"/>
</message>
<message name="mergeContactAndSendOnDemandMessageResponse">
<part name="parameters" element="tns:mergeContactAndSendOnDemandMessageResponse"/>
</message>
<message name="queryContactsByField">
<part name="parameters" element="tns:queryContactsByField"/>
</message>
<message name="queryContactsByFieldResponse">
<part name="parameters" element="tns:queryContactsByFieldResponse"/>
</message>
<message name="queryContactsByFilter">
<part name="parameters" element="tns:queryContactsByFilter"/>
</message>
<message name="queryContactsByFilterResponse">
<part name="parameters" element="tns:queryContactsByFilterResponse"/>
</message>
<message name="queryContactsByGroup">
<part name="parameters" element="tns:queryContactsByGroup"/>
</message>
<message name="queryContactsByGroupResponse">
<part name="parameters" element="tns:queryContactsByGroupResponse"/>
</message>
<message name="queryContactsByList">
<part name="parameters" element="tns:queryContactsByList"/>
</message>
<message name="queryContactsByListResponse">
<part name="parameters" element="tns:queryContactsByListResponse"/>
</message>
<message name="queryContactsReport">
<part name="parameters" element="tns:queryContactsReport"/>
</message>
<message name="queryContactsReportResponse">
<part name="parameters" element="tns:queryContactsReportResponse"/>
</message>
<message name="queryDeliveryStatus">
<part name="parameters" element="tns:queryDeliveryStatus"/>
</message>
<message name="queryDeliveryStatusResponse">
<part name="parameters" element="tns:queryDeliveryStatusResponse"/>
</message>
<message name="queryDeliveries">
<part name="parameters" element="tns:queryDeliveries"/>
</message>
<message name="queryDeliveriesResponse">
<part name="parameters" element="tns:queryDeliveriesResponse"/>
</message>
<message name="queryDetailedContactReport">
<part name="parameters" element="tns:queryDetailedContactReport"/>
</message>
<message name="queryDetailedContactReportResponse">
<part name="parameters" element="tns:queryDetailedContactReportResponse"/>
</message>
<message name="queryDetailedContactSMSReport">
<part name="parameters" element="tns:queryDetailedContactSMSReport"/>
</message>
<message name="queryDetailedContactSMSReportResponse">
<part name="parameters" element="tns:queryDetailedContactSMSReportResponse"/>
</message>
<message name="queryDetailedNewsletterReport">
<part name="parameters" element="tns:queryDetailedNewsletterReport"/>
</message>
<message name="queryDetailedNewsletterReportResponse">
<part name="parameters" element="tns:queryDetailedNewsletterReportResponse"/>
</message>
<message name="queryFormSubmissions">
<part name="parameters" element="tns:queryFormSubmissions"/>
</message>
<message name="queryFormSubmissionsResponse">
<part name="parameters" element="tns:queryFormSubmissionsResponse"/>
</message>
<message name="queryNewslettersByCampaign">
<part name="parameters" element="tns:queryNewslettersByCampaign"/>
</message>
<message name="queryNewslettersByCampaignResponse">
<part name="parameters" element="tns:queryNewslettersByCampaignResponse"/>
</message>
<message name="renderContent">
<part name="parameters" element="tns:renderContent"/>
</message>
<message name="renderContentResponse">
<part name="parameters" element="tns:renderContentResponse"/>
</message>
<message name="requestDeliveryStatusAction">
<part name="parameters" element="tns:requestDeliveryStatusAction"/>
</message>
<message name="requestDeliveryStatusActionResponse">
<part name="parameters" element="tns:requestDeliveryStatusActionResponse"/>
</message>
<message name="saveContactEvent">
<part name="parameters" element="tns:saveContactEvent"/>
</message>
<message name="saveContactEventResponse">
<part name="parameters" element="tns:saveContactEventResponse"/>
</message>
<message name="getSimpleMessageEvents">
<part name="parameters" element="tns:getSimpleMessageEvents"/>
</message>
<message name="getSimpleMessageEventsResponse">
<part name="parameters" element="tns:getSimpleMessageEventsResponse"/>
</message>
<message name="StatsException">
<part name="fault" element="tns:StatsException"/>
</message>
<message name="saveNewsletterCustomHeaders">
<part name="parameters" element="tns:saveNewsletterCustomHeaders"/>
</message>
<message name="saveNewsletterCustomHeadersResponse">
<part name="parameters" element="tns:saveNewsletterCustomHeadersResponse"/>
</message>
<message name="searchContents">
<part name="parameters" element="tns:searchContents"/>
</message>
<message name="searchContentsResponse">
<part name="parameters" element="tns:searchContentsResponse"/>
</message>
<message name="sendNewsletter">
<part name="parameters" element="tns:sendNewsletter"/>
</message>
<message name="sendNewsletterResponse">
<part name="parameters" element="tns:sendNewsletterResponse"/>
</message>
<message name="sendSingleNewsletter">
<part name="parameters" element="tns:sendSingleNewsletter"/>
</message>
<message name="sendSingleNewsletterResponse">
<part name="parameters" element="tns:sendSingleNewsletterResponse"/>
</message>
<message name="startBatchContactsUpdate">
<part name="parameters" element="tns:startBatchContactsUpdate"/>
</message>
<message name="startBatchContactsUpdateResponse">
<part name="parameters" element="tns:startBatchContactsUpdateResponse"/>
</message>
<message name="subscribeContactToList">
<part name="parameters" element="tns:subscribeContactToList"/>
</message>
<message name="subscribeContactToListResponse">
<part name="parameters" element="tns:subscribeContactToListResponse"/>
</message>
<message name="unsubscribeContactFromList">
<part name="parameters" element="tns:unsubscribeContactFromList"/>
</message>
<message name="unsubscribeContactFromListResponse">
<part name="parameters" element="tns:unsubscribeContactFromListResponse"/>
</message>
<message name="updateCustomContentType">
<part name="parameters" element="tns:updateCustomContentType"/>
</message>
<message name="updateCustomContentTypeResponse">
<part name="parameters" element="tns:updateCustomContentTypeResponse"/>
</message>
<message name="updateField">
<part name="parameters" element="tns:updateField"/>
</message>
<message name="updateFieldResponse">
<part name="parameters" element="tns:updateFieldResponse"/>
</message>
<message name="updateList">
<part name="parameters" element="tns:updateList"/>
</message>
<message name="updateListResponse">
<part name="parameters" element="tns:updateListResponse"/>
</message>
<message name="describeBounceCategories">
<part name="parameters" element="tns:describeBounceCategories"/>
</message>
<message name="describeBounceCategoriesResponse">
<part name="parameters" element="tns:describeBounceCategoriesResponse"/>
</message>
<message name="executeUpdate">
<part name="parameters" element="tns:executeUpdate"/>
</message>
<message name="executeUpdateResponse">
<part name="parameters" element="tns:executeUpdateResponse"/>
</message>
<message name="executeSql">
<part name="parameters" element="tns:executeSql"/>
</message>
<message name="executeSqlResponse">
<part name="parameters" element="tns:executeSqlResponse"/>
</message>
<message name="executeSimpleQuery">
<part name="parameters" element="tns:executeSimpleQuery"/>
</message>
<message name="executeSimpleQueryResponse">
<part name="parameters" element="tns:executeSimpleQueryResponse"/>
</message>
<message name="getAllPlannedDeliveries">
<part name="parameters" element="tns:getAllPlannedDeliveries"/>
</message>
<message name="getAllPlannedDeliveriesResponse">
<part name="parameters" element="tns:getAllPlannedDeliveriesResponse"/>
</message>
<message name="getAllDeliveryPolicies">
<part name="parameters" element="tns:getAllDeliveryPolicies"/>
</message>
<message name="getAllDeliveryPoliciesResponse">
<part name="parameters" element="tns:getAllDeliveryPoliciesResponse"/>
</message>
<message name="getSimpleMessageTypeReport">
<part name="parameters" element="tns:getSimpleMessageTypeReport"/>
</message>
<message name="getSimpleMessageTypeReportResponse">
<part name="parameters" element="tns:getSimpleMessageTypeReportResponse"/>
</message>
<message name="enterWorkflow">
<part name="parameters" element="tns:enterWorkflow"/>
</message>
<message name="enterWorkflowResponse">
<part name="parameters" element="tns:enterWorkflowResponse"/>
</message>
<message name="downloadReportAttachment">
<part name="parameters" element="tns:downloadReportAttachment"/>
</message>
<message name="downloadReportAttachmentResponse">
<part name="parameters" element="tns:downloadReportAttachmentResponse"/>
</message>
<message name="batchMergeContacts">
<part name="parameters" element="tns:batchMergeContacts"/>
</message>
<message name="batchMergeContactsResponse">
<part name="parameters" element="tns:batchMergeContactsResponse"/>
</message>
<message name="queryContacts">
<part name="parameters" element="tns:queryContacts"/>
</message>
<message name="queryContactsResponse">
<part name="parameters" element="tns:queryContactsResponse"/>
</message>
<message name="findContactByPrimaryKey">
<part name="parameters" element="tns:findContactByPrimaryKey"/>
</message>
<message name="findContactByPrimaryKeyResponse">
<part name="parameters" element="tns:findContactByPrimaryKeyResponse"/>
</message>
<message name="findContactById">
<part name="parameters" element="tns:findContactById"/>
</message>
<message name="findContactByIdResponse">
<part name="parameters" element="tns:findContactByIdResponse"/>
</message>
<message name="loginContact">
<part name="parameters" element="tns:loginContact"/>
</message>
<message name="loginContactResponse">
<part name="parameters" element="tns:loginContactResponse"/>
</message>
<message name="findContactsByField">
<part name="parameters" element="tns:findContactsByField"/>
</message>
<message name="findContactsByFieldResponse">
<part name="parameters" element="tns:findContactsByFieldResponse"/>
</message>
<message name="countContacts">
<part name="parameters" element="tns:countContacts"/>
</message>
<message name="countContactsResponse">
<part name="parameters" element="tns:countContactsResponse"/>
</message>
<message name="queryNewsletters">
<part name="parameters" element="tns:queryNewsletters"/>
</message>
<message name="queryNewslettersResponse">
<part name="parameters" element="tns:queryNewslettersResponse"/>
</message>
<message name="subscribeContact">
<part name="parameters" element="tns:subscribeContact"/>
</message>
<message name="subscribeContactResponse">
<part name="parameters" element="tns:subscribeContactResponse"/>
</message>
<message name="unsubscribeContact">
<part name="parameters" element="tns:unsubscribeContact"/>
</message>
<message name="unsubscribeContactResponse">
<part name="parameters" element="tns:unsubscribeContactResponse"/>
</message>
<message name="getAllDatabases">
<part name="parameters" element="tns:getAllDatabases"/>
</message>
<message name="getAllDatabasesResponse">
<part name="parameters" element="tns:getAllDatabasesResponse"/>
</message>
<message name="findDatabaseById">
<part name="parameters" element="tns:findDatabaseById"/>
</message>
<message name="findDatabaseByIdResponse">
<part name="parameters" element="tns:findDatabaseByIdResponse"/>
</message>
<message name="createSimpleGroup">
<part name="parameters" element="tns:createSimpleGroup"/>
</message>
<message name="createSimpleGroupResponse">
<part name="parameters" element="tns:createSimpleGroupResponse"/>
</message>
<message name="getAllSimpleMessageTypes">
<part name="parameters" element="tns:getAllSimpleMessageTypes"/>
</message>
<message name="getAllSimpleMessageTypesResponse">
<part name="parameters" element="tns:getAllSimpleMessageTypesResponse"/>
</message>
<message name="findSimpleMessageTypeById">
<part name="parameters" element="tns:findSimpleMessageTypeById"/>
</message>
<message name="findSimpleMessageTypeByIdResponse">
<part name="parameters" element="tns:findSimpleMessageTypeByIdResponse"/>
</message>
<message name="getAllSimpleMessageCategories">
<part name="parameters" element="tns:getAllSimpleMessageCategories"/>
</message>
<message name="getAllSimpleMessageCategoriesResponse">
<part name="parameters" element="tns:getAllSimpleMessageCategoriesResponse"/>
</message>
<message name="findSimpleMessageCategoryById">
<part name="parameters" element="tns:findSimpleMessageCategoryById"/>
</message>
<message name="findSimpleMessageCategoryByIdResponse">
<part name="parameters" element="tns:findSimpleMessageCategoryByIdResponse"/>
</message>
<message name="createSimpleMessageType">
<part name="parameters" element="tns:createSimpleMessageType"/>
</message>
<message name="createSimpleMessageTypeResponse">
<part name="parameters" element="tns:createSimpleMessageTypeResponse"/>
</message>
<message name="updateSimpleMessageType">
<part name="parameters" element="tns:updateSimpleMessageType"/>
</message>
<message name="updateSimpleMessageTypeResponse">
<part name="parameters" element="tns:updateSimpleMessageTypeResponse"/>
</message>
<message name="createSimpleMessageCategory">
<part name="parameters" element="tns:createSimpleMessageCategory"/>
</message>
<message name="createSimpleMessageCategoryResponse">
<part name="parameters" element="tns:createSimpleMessageCategoryResponse"/>
</message>
<message name="updateSimpleMessageCategory">
<part name="parameters" element="tns:updateSimpleMessageCategory"/>
</message>
<message name="updateSimpleMessageCategoryResponse">
<part name="parameters" element="tns:updateSimpleMessageCategoryResponse"/>
</message>
<message name="findGroupById">
<part name="parameters" element="tns:findGroupById"/>
</message>
<message name="findGroupByIdResponse">
<part name="parameters" element="tns:findGroupByIdResponse"/>
</message>
<message name="queryGroups">
<part name="parameters" element="tns:queryGroups"/>
</message>
<message name="queryGroupsResponse">
<part name="parameters" element="tns:queryGroupsResponse"/>
</message>
<message name="deleteGroup">
<part name="parameters" element="tns:deleteGroup"/>
</message>
<message name="deleteGroupResponse">
<part name="parameters" element="tns:deleteGroupResponse"/>
</message>
<message name="sendSimpleMessage">
<part name="parameters" element="tns:sendSimpleMessage"/>
</message>
<message name="sendSimpleMessageResponse">
<part name="parameters" element="tns:sendSimpleMessageResponse"/>
</message>
<message name="sendOnDemandMessage">
<part name="parameters" element="tns:sendOnDemandMessage"/>
</message>
<message name="sendOnDemandMessageResponse">
<part name="parameters" element="tns:sendOnDemandMessageResponse"/>
</message>
<message name="findCampaignById">
<part name="parameters" element="tns:findCampaignById"/>
</message>
<message name="findCampaignByIdResponse">
<part name="parameters" element="tns:findCampaignByIdResponse"/>
</message>
<message name="getAllCampaigns">
<part name="parameters" element="tns:getAllCampaigns"/>
</message>
<message name="getAllCampaignsResponse">
<part name="parameters" element="tns:getAllCampaignsResponse"/>
</message>
<message name="createCampaign">
<part name="parameters" element="tns:createCampaign"/>
</message>
<message name="createCampaignResponse">
<part name="parameters" element="tns:createCampaignResponse"/>
</message>
<message name="updateCampaign">
<part name="parameters" element="tns:updateCampaign"/>
</message>
<message name="updateCampaignResponse">
<part name="parameters" element="tns:updateCampaignResponse"/>
</message>
<message name="findNewsletterById">
<part name="parameters" element="tns:findNewsletterById"/>
</message>
<message name="findNewsletterByIdResponse">
<part name="parameters" element="tns:findNewsletterByIdResponse"/>
</message>
<message name="getAllNewsletterTemplates">
<part name="parameters" element="tns:getAllNewsletterTemplates"/>
</message>
<message name="getAllNewsletterTemplatesResponse">
<part name="parameters" element="tns:getAllNewsletterTemplatesResponse"/>
</message>
<message name="querySurveySessions">
<part name="parameters" element="tns:querySurveySessions"/>
</message>
<message name="querySurveySessionsResponse">
<part name="parameters" element="tns:querySurveySessionsResponse"/>
</message>
<message name="queryContents">
<part name="parameters" element="tns:queryContents"/>
</message>
<message name="queryContentsResponse">
<part name="parameters" element="tns:queryContentsResponse"/>
</message>
<message name="createContentTag">
<part name="parameters" element="tns:createContentTag"/>
</message>
<message name="createContentTagResponse">
<part name="parameters" element="tns:createContentTagResponse"/>
</message>
<message name="findWebPageById">
<part name="parameters" element="tns:findWebPageById"/>
</message>
<message name="findWebPageByIdResponse">
<part name="parameters" element="tns:findWebPageByIdResponse"/>
</message>
<message name="createWebPage">
<part name="parameters" element="tns:createWebPage"/>
</message>
<message name="createWebPageResponse">
<part name="parameters" element="tns:createWebPageResponse"/>
</message>
<message name="findSurveyById">
<part name="parameters" element="tns:findSurveyById"/>
</message>
<message name="findSurveyByIdResponse">
<part name="parameters" element="tns:findSurveyByIdResponse"/>
</message>
<message name="createNewsletter">
<part name="parameters" element="tns:createNewsletter"/>
</message>
<message name="createNewsletterResponse">
<part name="parameters" element="tns:createNewsletterResponse"/>
</message>
<message name="createNewsletterFromTemplate">
<part name="parameters" element="tns:createNewsletterFromTemplate"/>
</message>
<message name="createNewsletterFromTemplateResponse">
<part name="parameters" element="tns:createNewsletterFromTemplateResponse"/>
</message>
<message name="deleteNewsletter">
<part name="parameters" element="tns:deleteNewsletter"/>
</message>
<message name="deleteNewsletterResponse">
<part name="parameters" element="tns:deleteNewsletterResponse"/>
</message>
<message name="createContent">
<part name="parameters" element="tns:createContent"/>
</message>
<message name="createContentResponse">
<part name="parameters" element="tns:createContentResponse"/>
</message>
<message name="deleteContent">
<part name="parameters" element="tns:deleteContent"/>
</message>
<message name="deleteContentResponse">
<part name="parameters" element="tns:deleteContentResponse"/>
</message>
<message name="insertContentInNewsletter">
<part name="parameters" element="tns:insertContentInNewsletter"/>
</message>
<message name="insertContentInNewsletterResponse">
<part name="parameters" element="tns:insertContentInNewsletterResponse"/>
</message>
<message name="createContainerInNewsletter">
<part name="parameters" element="tns:createContainerInNewsletter"/>
</message>
<message name="createContainerInNewsletterResponse">
<part name="parameters" element="tns:createContainerInNewsletterResponse"/>
</message>
<message name="updateContainerValuesInNewsletter">
<part name="parameters" element="tns:updateContainerValuesInNewsletter"/>
</message>
<message name="updateContainerValuesInNewsletterResponse">
<part name="parameters" element="tns:updateContainerValuesInNewsletterResponse"/>
</message>
<message name="clearContainerContentsInNewsletter">
<part name="parameters" element="tns:clearContainerContentsInNewsletter"/>
</message>
<message name="clearContainerContentsInNewsletterResponse">
<part name="parameters" element="tns:clearContainerContentsInNewsletterResponse"/>
</message>
<message name="getContentsInNewsletter">
<part name="parameters" element="tns:getContentsInNewsletter"/>
</message>
<message name="getContentsInNewsletterResponse">
<part name="parameters" element="tns:getContentsInNewsletterResponse"/>
</message>
<message name="findPlannedDeliveryById">
<part name="parameters" element="tns:findPlannedDeliveryById"/>
</message>
<message name="findPlannedDeliveryByIdResponse">
<part name="parameters" element="tns:findPlannedDeliveryByIdResponse"/>
</message>
<message name="saveReceivedMessage">
<part name="parameters" element="tns:saveReceivedMessage"/>
</message>
<message name="saveReceivedMessageResponse">
<part name="parameters" element="tns:saveReceivedMessageResponse"/>
</message>
<message name="requestReport">
<part name="parameters" element="tns:requestReport"/>
</message>
<message name="requestReportResponse">
<part name="parameters" element="tns:requestReportResponse"/>
</message>
<message name="getReportStatus">
<part name="parameters" element="tns:getReportStatus"/>
</message>
<message name="getReportStatusResponse">
<part name="parameters" element="tns:getReportStatusResponse"/>
</message>
<message name="getAllDeliverabilityClusters">
<part name="parameters" element="tns:getAllDeliverabilityClusters"/>
</message>
<message name="getAllDeliverabilityClustersResponse">
<part name="parameters" element="tns:getAllDeliverabilityClustersResponse"/>
</message>
<portType name="MagNewsAPI">
<operation name="getVersion">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getVersionRequest" message="tns:getVersion"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getVersionResponse" message="tns:getVersionResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getVersion/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getVersion/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="addDataToContactsRowsSetFromFile">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToContactsRowsSetFromFileRequest" message="tns:addDataToContactsRowsSetFromFile"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToContactsRowsSetFromFileResponse" message="tns:addDataToContactsRowsSetFromFileResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToContactsRowsSetFromFile/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToContactsRowsSetFromFile/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="attachFileToNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/attachFileToNewsletterRequest" message="tns:attachFileToNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/attachFileToNewsletterResponse" message="tns:attachFileToNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/attachFileToNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/attachFileToNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchFindContactByFilter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByFilterRequest" message="tns:batchFindContactByFilter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByFilterResponse" message="tns:batchFindContactByFilterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByFilter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByFilter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="sendEmailMessage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/sendEmailMessageRequest" message="tns:sendEmailMessage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/sendEmailMessageResponse" message="tns:sendEmailMessageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendEmailMessage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendEmailMessage/Fault/ServiceNotAvailableException"/>
<fault message="tns:InvalidMessageException" name="InvalidMessageException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendEmailMessage/Fault/InvalidMessageException"/>
</operation>
<operation name="batchSendOnDemandMessage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendOnDemandMessageRequest" message="tns:batchSendOnDemandMessage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendOnDemandMessageResponse" message="tns:batchSendOnDemandMessageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendOnDemandMessage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendOnDemandMessage/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchSendSimpleMessage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSimpleMessageRequest" message="tns:batchSendSimpleMessage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSimpleMessageResponse" message="tns:batchSendSimpleMessageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSimpleMessage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSimpleMessage/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchCancelSimpleMessages">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchCancelSimpleMessagesRequest" message="tns:batchCancelSimpleMessages"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchCancelSimpleMessagesResponse" message="tns:batchCancelSimpleMessagesResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchCancelSimpleMessages/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchCancelSimpleMessages/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchSendEmailMessage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendEmailMessageRequest" message="tns:batchSendEmailMessage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendEmailMessageResponse" message="tns:batchSendEmailMessageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendEmailMessage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendEmailMessage/Fault/ServiceNotAvailableException"/>
<fault message="tns:InvalidMessageException" name="InvalidMessageException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendEmailMessage/Fault/InvalidMessageException"/>
</operation>
<operation name="batchSendSmsMessage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSmsMessageRequest" message="tns:batchSendSmsMessage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSmsMessageResponse" message="tns:batchSendSmsMessageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSmsMessage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSmsMessage/Fault/ServiceNotAvailableException"/>
<fault message="tns:InvalidMessageException" name="InvalidMessageException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSmsMessage/Fault/InvalidMessageException"/>
</operation>
<operation name="sendSmsMessage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/sendSmsMessageRequest" message="tns:sendSmsMessage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/sendSmsMessageResponse" message="tns:sendSmsMessageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendSmsMessage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendSmsMessage/Fault/ServiceNotAvailableException"/>
<fault message="tns:InvalidMessageException" name="InvalidMessageException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendSmsMessage/Fault/InvalidMessageException"/>
</operation>
<operation name="batchSendSingleNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSingleNewsletterRequest" message="tns:batchSendSingleNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSingleNewsletterResponse" message="tns:batchSendSingleNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSingleNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSendSingleNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchSubscribeContactToList">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchSubscribeContactToListRequest" message="tns:batchSubscribeContactToList"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchSubscribeContactToListResponse" message="tns:batchSubscribeContactToListResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSubscribeContactToList/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchSubscribeContactToList/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchUnsubscribeContactFromList">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchUnsubscribeContactFromListRequest" message="tns:batchUnsubscribeContactFromList"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchUnsubscribeContactFromListResponse" message="tns:batchUnsubscribeContactFromListResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchUnsubscribeContactFromList/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchUnsubscribeContactFromList/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="calculateContactReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/calculateContactReportRequest" message="tns:calculateContactReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/calculateContactReportResponse" message="tns:calculateContactReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/calculateContactReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/calculateContactReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="callApplication">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/callApplicationRequest" message="tns:callApplication"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/callApplicationResponse" message="tns:callApplicationResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/callApplication/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/callApplication/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createContactRowSet">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createContactRowSetRequest" message="tns:createContactRowSet"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createContactRowSetResponse" message="tns:createContactRowSetResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createContactRowSet/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createContactRowSet/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createCustomDataRowSet">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createCustomDataRowSetRequest" message="tns:createCustomDataRowSet"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createCustomDataRowSetResponse" message="tns:createCustomDataRowSetResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createCustomDataRowSet/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createCustomDataRowSet/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="addDataToCustomDataRowsSetFromFile">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToCustomDataRowsSetFromFileRequest" message="tns:addDataToCustomDataRowsSetFromFile"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToCustomDataRowsSetFromFileResponse" message="tns:addDataToCustomDataRowsSetFromFileResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToCustomDataRowsSetFromFile/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToCustomDataRowsSetFromFile/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="startBatchCustomTableUpdate">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/startBatchCustomTableUpdateRequest" message="tns:startBatchCustomTableUpdate"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/startBatchCustomTableUpdateResponse" message="tns:startBatchCustomTableUpdateResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/startBatchCustomTableUpdate/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/startBatchCustomTableUpdate/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="cancelBatch">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/cancelBatchRequest" message="tns:cancelBatch"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/cancelBatchResponse" message="tns:cancelBatchResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/cancelBatch/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/cancelBatch/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="addDataToContactsRowsSet">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToContactsRowsSetRequest" message="tns:addDataToContactsRowsSet"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToContactsRowsSetResponse" message="tns:addDataToContactsRowsSetResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToContactsRowsSet/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/addDataToContactsRowsSet/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="uploadMedia">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/uploadMediaRequest" message="tns:uploadMedia"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/uploadMediaResponse" message="tns:uploadMediaResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/uploadMedia/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/uploadMedia/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="downloadMedia">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/downloadMediaRequest" message="tns:downloadMedia"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/downloadMediaResponse" message="tns:downloadMediaResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/downloadMedia/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/downloadMedia/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findMediaByName">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findMediaByNameRequest" message="tns:findMediaByName"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findMediaByNameResponse" message="tns:findMediaByNameResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findMediaByName/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findMediaByName/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createCustomContentType">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createCustomContentTypeRequest" message="tns:createCustomContentType"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createCustomContentTypeResponse" message="tns:createCustomContentTypeResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createCustomContentType/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createCustomContentType/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createField">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createFieldRequest" message="tns:createField"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createFieldResponse" message="tns:createFieldResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createField/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createField/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="updateNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/updateNewsletterRequest" message="tns:updateNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/updateNewsletterResponse" message="tns:updateNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createSimpleStaticGroup">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleStaticGroupRequest" message="tns:createSimpleStaticGroup"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleStaticGroupResponse" message="tns:createSimpleStaticGroupResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleStaticGroup/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleStaticGroup/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createStaticGroupFromQuery">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createStaticGroupFromQueryRequest" message="tns:createStaticGroupFromQuery"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createStaticGroupFromQueryResponse" message="tns:createStaticGroupFromQueryResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createStaticGroupFromQuery/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createStaticGroupFromQuery/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createDynamicGroupFromQuery">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createDynamicGroupFromQueryRequest" message="tns:createDynamicGroupFromQuery"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createDynamicGroupFromQueryResponse" message="tns:createDynamicGroupFromQueryResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createDynamicGroupFromQuery/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createDynamicGroupFromQuery/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createStaticGroupFromNewsletterTarget">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createStaticGroupFromNewsletterTargetRequest" message="tns:createStaticGroupFromNewsletterTarget"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createStaticGroupFromNewsletterTargetResponse" message="tns:createStaticGroupFromNewsletterTargetResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createStaticGroupFromNewsletterTarget/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createStaticGroupFromNewsletterTarget/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createSimpleList">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleListRequest" message="tns:createSimpleList"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleListResponse" message="tns:createSimpleListResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleList/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleList/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createSimpleSurvey">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleSurveyRequest" message="tns:createSimpleSurvey"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleSurveyResponse" message="tns:createSimpleSurveyResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleSurvey/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleSurvey/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="deleteCustomContentType">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/deleteCustomContentTypeRequest" message="tns:deleteCustomContentType"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/deleteCustomContentTypeResponse" message="tns:deleteCustomContentTypeResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/deleteCustomContentType/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/deleteCustomContentType/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="destroyRowSetInfo">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/destroyRowSetInfoRequest" message="tns:destroyRowSetInfo"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/destroyRowSetInfoResponse" message="tns:destroyRowSetInfoResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/destroyRowSetInfo/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/destroyRowSetInfo/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="downloadContent">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/downloadContentRequest" message="tns:downloadContent"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/downloadContentResponse" message="tns:downloadContentResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/downloadContent/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/downloadContent/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="executeFormSubmission">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/executeFormSubmissionRequest" message="tns:executeFormSubmission"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/executeFormSubmissionResponse" message="tns:executeFormSubmissionResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/executeFormSubmission/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/executeFormSubmission/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fetchBatchContactsUpdateReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fetchBatchContactsUpdateReportRequest" message="tns:fetchBatchContactsUpdateReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fetchBatchContactsUpdateReportResponse" message="tns:fetchBatchContactsUpdateReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchBatchContactsUpdateReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchBatchContactsUpdateReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fetchBatchCustomDataUpdateReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fetchBatchCustomDataUpdateReportRequest" message="tns:fetchBatchCustomDataUpdateReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fetchBatchCustomDataUpdateReportResponse" message="tns:fetchBatchCustomDataUpdateReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchBatchCustomDataUpdateReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchBatchCustomDataUpdateReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fetchContacts">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fetchContactsRequest" message="tns:fetchContacts"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fetchContactsResponse" message="tns:fetchContactsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchContacts/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchContacts/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fetchContactsReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fetchContactsReportRequest" message="tns:fetchContactsReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fetchContactsReportResponse" message="tns:fetchContactsReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchContactsReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchContactsReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fetchDeliveryStatus">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDeliveryStatusRequest" message="tns:fetchDeliveryStatus"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDeliveryStatusResponse" message="tns:fetchDeliveryStatusResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDeliveryStatus/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDeliveryStatus/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fetchDetailedContactReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedContactReportRequest" message="tns:fetchDetailedContactReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedContactReportResponse" message="tns:fetchDetailedContactReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedContactReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedContactReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fetchDetailedContactSMSReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedContactSMSReportRequest" message="tns:fetchDetailedContactSMSReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedContactSMSReportResponse" message="tns:fetchDetailedContactSMSReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedContactSMSReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedContactSMSReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fetchDetailedNewsletterReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedNewsletterReportRequest" message="tns:fetchDetailedNewsletterReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedNewsletterReportResponse" message="tns:fetchDetailedNewsletterReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedNewsletterReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchDetailedNewsletterReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fetchFormSubmissions">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fetchFormSubmissionsRequest" message="tns:fetchFormSubmissions"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fetchFormSubmissionsResponse" message="tns:fetchFormSubmissionsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchFormSubmissions/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchFormSubmissions/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fetchNewsletters">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fetchNewslettersRequest" message="tns:fetchNewsletters"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fetchNewslettersResponse" message="tns:fetchNewslettersResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchNewsletters/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchNewsletters/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fetchSurveySessions">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fetchSurveySessionsRequest" message="tns:fetchSurveySessions"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fetchSurveySessionsResponse" message="tns:fetchSurveySessionsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchSurveySessions/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fetchSurveySessions/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findContactListSubscriptionToList">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findContactListSubscriptionToListRequest" message="tns:findContactListSubscriptionToList"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findContactListSubscriptionToListResponse" message="tns:findContactListSubscriptionToListResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findContactListSubscriptionToList/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findContactListSubscriptionToList/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findCustomContentTypeById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findCustomContentTypeByIdRequest" message="tns:findCustomContentTypeById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findCustomContentTypeByIdResponse" message="tns:findCustomContentTypeByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findCustomContentTypeById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findCustomContentTypeById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchFindContactById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByIdRequest" message="tns:batchFindContactById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByIdResponse" message="tns:batchFindContactByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchFindContactByPrimaryKey">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByPrimaryKeyRequest" message="tns:batchFindContactByPrimaryKey"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByPrimaryKeyResponse" message="tns:batchFindContactByPrimaryKeyResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByPrimaryKey/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByPrimaryKey/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchFindContactByPrimaryKeyEx">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByPrimaryKeyExRequest" message="tns:batchFindContactByPrimaryKeyEx"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByPrimaryKeyExResponse" message="tns:batchFindContactByPrimaryKeyExResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByPrimaryKeyEx/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactByPrimaryKeyEx/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchFindContactListSubscriptionToList">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactListSubscriptionToListRequest" message="tns:batchFindContactListSubscriptionToList"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactListSubscriptionToListResponse" message="tns:batchFindContactListSubscriptionToListResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactListSubscriptionToList/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchFindContactListSubscriptionToList/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchGetMessageStatus">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetMessageStatusRequest" message="tns:batchGetMessageStatus"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetMessageStatusResponse" message="tns:batchGetMessageStatusResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetMessageStatus/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetMessageStatus/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchGetSimpleMessageStatus">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetSimpleMessageStatusRequest" message="tns:batchGetSimpleMessageStatus"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetSimpleMessageStatusResponse" message="tns:batchGetSimpleMessageStatusResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetSimpleMessageStatus/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetSimpleMessageStatus/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchGetSimpleMessageStatusByExternalId">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetSimpleMessageStatusByExternalIdRequest" message="tns:batchGetSimpleMessageStatusByExternalId"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetSimpleMessageStatusByExternalIdResponse" message="tns:batchGetSimpleMessageStatusByExternalIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetSimpleMessageStatusByExternalId/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchGetSimpleMessageStatusByExternalId/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchMergeContactAndSendOnDemandMessage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchMergeContactAndSendOnDemandMessageRequest" message="tns:batchMergeContactAndSendOnDemandMessage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchMergeContactAndSendOnDemandMessageResponse" message="tns:batchMergeContactAndSendOnDemandMessageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchMergeContactAndSendOnDemandMessage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchMergeContactAndSendOnDemandMessage/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findFieldByName">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findFieldByNameRequest" message="tns:findFieldByName"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findFieldByNameResponse" message="tns:findFieldByNameResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findFieldByName/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findFieldByName/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findListById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findListByIdRequest" message="tns:findListById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findListByIdResponse" message="tns:findListByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findListById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findListById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getActiveDeliveryStatus">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getActiveDeliveryStatusRequest" message="tns:getActiveDeliveryStatus"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getActiveDeliveryStatusResponse" message="tns:getActiveDeliveryStatusResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getActiveDeliveryStatus/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getActiveDeliveryStatus/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllContentTags">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllContentTagsRequest" message="tns:getAllContentTags"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllContentTagsResponse" message="tns:getAllContentTagsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllContentTags/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllContentTags/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllWebDomains">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllWebDomainsRequest" message="tns:getAllWebDomains"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllWebDomainsResponse" message="tns:getAllWebDomainsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllWebDomains/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllWebDomains/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllFieldsInPage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllFieldsInPageRequest" message="tns:getAllFieldsInPage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllFieldsInPageResponse" message="tns:getAllFieldsInPageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllFieldsInPage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllFieldsInPage/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllFieldsInSurvey">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllFieldsInSurveyRequest" message="tns:getAllFieldsInSurvey"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllFieldsInSurveyResponse" message="tns:getAllFieldsInSurveyResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllFieldsInSurvey/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllFieldsInSurvey/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllSurveys">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSurveysRequest" message="tns:getAllSurveys"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSurveysResponse" message="tns:getAllSurveysResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSurveys/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSurveys/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllWebSites">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllWebSitesRequest" message="tns:getAllWebSites"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllWebSitesResponse" message="tns:getAllWebSitesResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllWebSites/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllWebSites/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getBasicDatabaseReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getBasicDatabaseReportRequest" message="tns:getBasicDatabaseReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getBasicDatabaseReportResponse" message="tns:getBasicDatabaseReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getBasicDatabaseReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getBasicDatabaseReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getBasicNewsletterReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getBasicNewsletterReportRequest" message="tns:getBasicNewsletterReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getBasicNewsletterReportResponse" message="tns:getBasicNewsletterReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getBasicNewsletterReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getBasicNewsletterReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getNewsletterReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterReportRequest" message="tns:getNewsletterReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterReportResponse" message="tns:getNewsletterReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getBatchStatusInfo">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getBatchStatusInfoRequest" message="tns:getBatchStatusInfo"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getBatchStatusInfoResponse" message="tns:getBatchStatusInfoResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getBatchStatusInfo/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getBatchStatusInfo/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getDeliveryStatus">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getDeliveryStatusRequest" message="tns:getDeliveryStatus"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getDeliveryStatusResponse" message="tns:getDeliveryStatusResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getDeliveryStatus/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getDeliveryStatus/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getDeliveryStatusForNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getDeliveryStatusForNewsletterRequest" message="tns:getDeliveryStatusForNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getDeliveryStatusForNewsletterResponse" message="tns:getDeliveryStatusForNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getDeliveryStatusForNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getDeliveryStatusForNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getFieldsByDatabase">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getFieldsByDatabaseRequest" message="tns:getFieldsByDatabase"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getFieldsByDatabaseResponse" message="tns:getFieldsByDatabaseResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getFieldsByDatabase/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getFieldsByDatabase/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getGroupsByDatabase">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getGroupsByDatabaseRequest" message="tns:getGroupsByDatabase"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getGroupsByDatabaseResponse" message="tns:getGroupsByDatabaseResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getGroupsByDatabase/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getGroupsByDatabase/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getListsByDatabase">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getListsByDatabaseRequest" message="tns:getListsByDatabase"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getListsByDatabaseResponse" message="tns:getListsByDatabaseResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getListsByDatabase/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getListsByDatabase/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getMessageStatus">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getMessageStatusRequest" message="tns:getMessageStatus"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getMessageStatusResponse" message="tns:getMessageStatusResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getMessageStatus/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getMessageStatus/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getNewsletterDetails">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterDetailsRequest" message="tns:getNewsletterDetails"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterDetailsResponse" message="tns:getNewsletterDetailsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterDetails/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterDetails/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getNewsletterWebVersionLink">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterWebVersionLinkRequest" message="tns:getNewsletterWebVersionLink"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterWebVersionLinkResponse" message="tns:getNewsletterWebVersionLinkResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterWebVersionLink/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getNewsletterWebVersionLink/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getRowSetInfo">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getRowSetInfoRequest" message="tns:getRowSetInfo"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getRowSetInfoResponse" message="tns:getRowSetInfoResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getRowSetInfo/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getRowSetInfo/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getSimpleMessageStatus">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageStatusRequest" message="tns:getSimpleMessageStatus"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageStatusResponse" message="tns:getSimpleMessageStatusResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageStatus/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageStatus/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getWebPageLink">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getWebPageLinkRequest" message="tns:getWebPageLink"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getWebPageLinkResponse" message="tns:getWebPageLinkResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getWebPageLink/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getWebPageLink/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="fillNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/fillNewsletterRequest" message="tns:fillNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/fillNewsletterResponse" message="tns:fillNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/fillNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/fillNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="insertContentInWebPage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/insertContentInWebPageRequest" message="tns:insertContentInWebPage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/insertContentInWebPageResponse" message="tns:insertContentInWebPageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/insertContentInWebPage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/insertContentInWebPage/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="mergeContact">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/mergeContactRequest" message="tns:mergeContact"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/mergeContactResponse" message="tns:mergeContactResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/mergeContact/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/mergeContact/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="mergeContactAndSendOnDemandMessage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/mergeContactAndSendOnDemandMessageRequest" message="tns:mergeContactAndSendOnDemandMessage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/mergeContactAndSendOnDemandMessageResponse" message="tns:mergeContactAndSendOnDemandMessageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/mergeContactAndSendOnDemandMessage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/mergeContactAndSendOnDemandMessage/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryContactsByField">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByFieldRequest" message="tns:queryContactsByField"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByFieldResponse" message="tns:queryContactsByFieldResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByField/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByField/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryContactsByFilter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByFilterRequest" message="tns:queryContactsByFilter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByFilterResponse" message="tns:queryContactsByFilterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByFilter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByFilter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryContactsByGroup">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByGroupRequest" message="tns:queryContactsByGroup"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByGroupResponse" message="tns:queryContactsByGroupResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByGroup/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByGroup/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryContactsByList">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByListRequest" message="tns:queryContactsByList"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByListResponse" message="tns:queryContactsByListResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByList/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsByList/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryContactsReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsReportRequest" message="tns:queryContactsReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsReportResponse" message="tns:queryContactsReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryDeliveryStatus">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryDeliveryStatusRequest" message="tns:queryDeliveryStatus"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryDeliveryStatusResponse" message="tns:queryDeliveryStatusResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryDeliveryStatus/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryDeliveryStatus/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryDeliveries">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryDeliveriesRequest" message="tns:queryDeliveries"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryDeliveriesResponse" message="tns:queryDeliveriesResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryDeliveries/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryDeliveries/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryDetailedContactReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedContactReportRequest" message="tns:queryDetailedContactReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedContactReportResponse" message="tns:queryDetailedContactReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedContactReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedContactReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryDetailedContactSMSReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedContactSMSReportRequest" message="tns:queryDetailedContactSMSReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedContactSMSReportResponse" message="tns:queryDetailedContactSMSReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedContactSMSReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedContactSMSReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryDetailedNewsletterReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedNewsletterReportRequest" message="tns:queryDetailedNewsletterReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedNewsletterReportResponse" message="tns:queryDetailedNewsletterReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedNewsletterReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryDetailedNewsletterReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryFormSubmissions">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryFormSubmissionsRequest" message="tns:queryFormSubmissions"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryFormSubmissionsResponse" message="tns:queryFormSubmissionsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryFormSubmissions/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryFormSubmissions/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryNewslettersByCampaign">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryNewslettersByCampaignRequest" message="tns:queryNewslettersByCampaign"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryNewslettersByCampaignResponse" message="tns:queryNewslettersByCampaignResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryNewslettersByCampaign/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryNewslettersByCampaign/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="renderContent">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/renderContentRequest" message="tns:renderContent"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/renderContentResponse" message="tns:renderContentResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/renderContent/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/renderContent/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="requestDeliveryStatusAction">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/requestDeliveryStatusActionRequest" message="tns:requestDeliveryStatusAction"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/requestDeliveryStatusActionResponse" message="tns:requestDeliveryStatusActionResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/requestDeliveryStatusAction/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/requestDeliveryStatusAction/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="saveContactEvent">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/saveContactEventRequest" message="tns:saveContactEvent"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/saveContactEventResponse" message="tns:saveContactEventResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/saveContactEvent/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/saveContactEvent/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getSimpleMessageEvents">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageEventsRequest" message="tns:getSimpleMessageEvents"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageEventsResponse" message="tns:getSimpleMessageEventsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageEvents/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageEvents/Fault/ServiceNotAvailableException"/>
<fault message="tns:StatsException" name="StatsException" wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageEvents/Fault/StatsException"/>
</operation>
<operation name="saveNewsletterCustomHeaders">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/saveNewsletterCustomHeadersRequest" message="tns:saveNewsletterCustomHeaders"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/saveNewsletterCustomHeadersResponse" message="tns:saveNewsletterCustomHeadersResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/saveNewsletterCustomHeaders/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/saveNewsletterCustomHeaders/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="searchContents">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/searchContentsRequest" message="tns:searchContents"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/searchContentsResponse" message="tns:searchContentsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/searchContents/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/searchContents/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="sendNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/sendNewsletterRequest" message="tns:sendNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/sendNewsletterResponse" message="tns:sendNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="sendSingleNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/sendSingleNewsletterRequest" message="tns:sendSingleNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/sendSingleNewsletterResponse" message="tns:sendSingleNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendSingleNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendSingleNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="startBatchContactsUpdate">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/startBatchContactsUpdateRequest" message="tns:startBatchContactsUpdate"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/startBatchContactsUpdateResponse" message="tns:startBatchContactsUpdateResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/startBatchContactsUpdate/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/startBatchContactsUpdate/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="subscribeContactToList">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/subscribeContactToListRequest" message="tns:subscribeContactToList"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/subscribeContactToListResponse" message="tns:subscribeContactToListResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/subscribeContactToList/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/subscribeContactToList/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="unsubscribeContactFromList">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/unsubscribeContactFromListRequest" message="tns:unsubscribeContactFromList"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/unsubscribeContactFromListResponse" message="tns:unsubscribeContactFromListResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/unsubscribeContactFromList/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/unsubscribeContactFromList/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="updateCustomContentType">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/updateCustomContentTypeRequest" message="tns:updateCustomContentType"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/updateCustomContentTypeResponse" message="tns:updateCustomContentTypeResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateCustomContentType/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateCustomContentType/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="updateField">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/updateFieldRequest" message="tns:updateField"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/updateFieldResponse" message="tns:updateFieldResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateField/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateField/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="updateList">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/updateListRequest" message="tns:updateList"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/updateListResponse" message="tns:updateListResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateList/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateList/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="describeBounceCategories">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/describeBounceCategoriesRequest" message="tns:describeBounceCategories"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/describeBounceCategoriesResponse" message="tns:describeBounceCategoriesResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/describeBounceCategories/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/describeBounceCategories/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="executeUpdate">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/executeUpdateRequest" message="tns:executeUpdate"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/executeUpdateResponse" message="tns:executeUpdateResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/executeUpdate/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/executeUpdate/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="executeSql">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/executeSqlRequest" message="tns:executeSql"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/executeSqlResponse" message="tns:executeSqlResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/executeSql/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/executeSql/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="executeSimpleQuery">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/executeSimpleQueryRequest" message="tns:executeSimpleQuery"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/executeSimpleQueryResponse" message="tns:executeSimpleQueryResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/executeSimpleQuery/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/executeSimpleQuery/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllPlannedDeliveries">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllPlannedDeliveriesRequest" message="tns:getAllPlannedDeliveries"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllPlannedDeliveriesResponse" message="tns:getAllPlannedDeliveriesResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllPlannedDeliveries/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllPlannedDeliveries/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllDeliveryPolicies">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDeliveryPoliciesRequest" message="tns:getAllDeliveryPolicies"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDeliveryPoliciesResponse" message="tns:getAllDeliveryPoliciesResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDeliveryPolicies/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDeliveryPolicies/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getSimpleMessageTypeReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageTypeReportRequest" message="tns:getSimpleMessageTypeReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageTypeReportResponse" message="tns:getSimpleMessageTypeReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageTypeReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getSimpleMessageTypeReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="enterWorkflow">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/enterWorkflowRequest" message="tns:enterWorkflow"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/enterWorkflowResponse" message="tns:enterWorkflowResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/enterWorkflow/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/enterWorkflow/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="downloadReportAttachment">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/downloadReportAttachmentRequest" message="tns:downloadReportAttachment"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/downloadReportAttachmentResponse" message="tns:downloadReportAttachmentResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/downloadReportAttachment/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/downloadReportAttachment/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="batchMergeContacts">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/batchMergeContactsRequest" message="tns:batchMergeContacts"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/batchMergeContactsResponse" message="tns:batchMergeContactsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchMergeContacts/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/batchMergeContacts/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryContacts">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsRequest" message="tns:queryContacts"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryContactsResponse" message="tns:queryContactsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContacts/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContacts/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findContactByPrimaryKey">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findContactByPrimaryKeyRequest" message="tns:findContactByPrimaryKey"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findContactByPrimaryKeyResponse" message="tns:findContactByPrimaryKeyResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findContactByPrimaryKey/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findContactByPrimaryKey/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findContactById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findContactByIdRequest" message="tns:findContactById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findContactByIdResponse" message="tns:findContactByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findContactById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findContactById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="loginContact">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/loginContactRequest" message="tns:loginContact"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/loginContactResponse" message="tns:loginContactResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/loginContact/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/loginContact/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findContactsByField">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findContactsByFieldRequest" message="tns:findContactsByField"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findContactsByFieldResponse" message="tns:findContactsByFieldResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findContactsByField/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findContactsByField/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="countContacts">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/countContactsRequest" message="tns:countContacts"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/countContactsResponse" message="tns:countContactsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/countContacts/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/countContacts/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryNewsletters">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryNewslettersRequest" message="tns:queryNewsletters"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryNewslettersResponse" message="tns:queryNewslettersResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryNewsletters/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryNewsletters/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="subscribeContact">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/subscribeContactRequest" message="tns:subscribeContact"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/subscribeContactResponse" message="tns:subscribeContactResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/subscribeContact/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/subscribeContact/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="unsubscribeContact">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/unsubscribeContactRequest" message="tns:unsubscribeContact"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/unsubscribeContactResponse" message="tns:unsubscribeContactResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/unsubscribeContact/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/unsubscribeContact/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllDatabases">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDatabasesRequest" message="tns:getAllDatabases"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDatabasesResponse" message="tns:getAllDatabasesResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDatabases/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDatabases/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findDatabaseById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findDatabaseByIdRequest" message="tns:findDatabaseById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findDatabaseByIdResponse" message="tns:findDatabaseByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findDatabaseById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findDatabaseById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createSimpleGroup">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleGroupRequest" message="tns:createSimpleGroup"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleGroupResponse" message="tns:createSimpleGroupResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleGroup/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleGroup/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllSimpleMessageTypes">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSimpleMessageTypesRequest" message="tns:getAllSimpleMessageTypes"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSimpleMessageTypesResponse" message="tns:getAllSimpleMessageTypesResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSimpleMessageTypes/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSimpleMessageTypes/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findSimpleMessageTypeById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findSimpleMessageTypeByIdRequest" message="tns:findSimpleMessageTypeById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findSimpleMessageTypeByIdResponse" message="tns:findSimpleMessageTypeByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findSimpleMessageTypeById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findSimpleMessageTypeById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllSimpleMessageCategories">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSimpleMessageCategoriesRequest" message="tns:getAllSimpleMessageCategories"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSimpleMessageCategoriesResponse" message="tns:getAllSimpleMessageCategoriesResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSimpleMessageCategories/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllSimpleMessageCategories/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findSimpleMessageCategoryById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findSimpleMessageCategoryByIdRequest" message="tns:findSimpleMessageCategoryById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findSimpleMessageCategoryByIdResponse" message="tns:findSimpleMessageCategoryByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findSimpleMessageCategoryById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findSimpleMessageCategoryById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createSimpleMessageType">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleMessageTypeRequest" message="tns:createSimpleMessageType"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleMessageTypeResponse" message="tns:createSimpleMessageTypeResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleMessageType/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleMessageType/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="updateSimpleMessageType">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/updateSimpleMessageTypeRequest" message="tns:updateSimpleMessageType"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/updateSimpleMessageTypeResponse" message="tns:updateSimpleMessageTypeResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateSimpleMessageType/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateSimpleMessageType/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createSimpleMessageCategory">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleMessageCategoryRequest" message="tns:createSimpleMessageCategory"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleMessageCategoryResponse" message="tns:createSimpleMessageCategoryResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleMessageCategory/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createSimpleMessageCategory/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="updateSimpleMessageCategory">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/updateSimpleMessageCategoryRequest" message="tns:updateSimpleMessageCategory"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/updateSimpleMessageCategoryResponse" message="tns:updateSimpleMessageCategoryResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateSimpleMessageCategory/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateSimpleMessageCategory/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findGroupById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findGroupByIdRequest" message="tns:findGroupById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findGroupByIdResponse" message="tns:findGroupByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findGroupById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findGroupById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryGroups">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryGroupsRequest" message="tns:queryGroups"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryGroupsResponse" message="tns:queryGroupsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryGroups/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryGroups/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="deleteGroup">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/deleteGroupRequest" message="tns:deleteGroup"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/deleteGroupResponse" message="tns:deleteGroupResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/deleteGroup/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/deleteGroup/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="sendSimpleMessage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/sendSimpleMessageRequest" message="tns:sendSimpleMessage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/sendSimpleMessageResponse" message="tns:sendSimpleMessageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendSimpleMessage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendSimpleMessage/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="sendOnDemandMessage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/sendOnDemandMessageRequest" message="tns:sendOnDemandMessage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/sendOnDemandMessageResponse" message="tns:sendOnDemandMessageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendOnDemandMessage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/sendOnDemandMessage/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findCampaignById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findCampaignByIdRequest" message="tns:findCampaignById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findCampaignByIdResponse" message="tns:findCampaignByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findCampaignById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findCampaignById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllCampaigns">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllCampaignsRequest" message="tns:getAllCampaigns"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllCampaignsResponse" message="tns:getAllCampaignsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllCampaigns/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllCampaigns/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createCampaign">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createCampaignRequest" message="tns:createCampaign"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createCampaignResponse" message="tns:createCampaignResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createCampaign/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createCampaign/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="updateCampaign">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/updateCampaignRequest" message="tns:updateCampaign"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/updateCampaignResponse" message="tns:updateCampaignResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateCampaign/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateCampaign/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findNewsletterById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findNewsletterByIdRequest" message="tns:findNewsletterById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findNewsletterByIdResponse" message="tns:findNewsletterByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findNewsletterById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findNewsletterById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllNewsletterTemplates">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllNewsletterTemplatesRequest" message="tns:getAllNewsletterTemplates"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllNewsletterTemplatesResponse" message="tns:getAllNewsletterTemplatesResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllNewsletterTemplates/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllNewsletterTemplates/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="querySurveySessions">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/querySurveySessionsRequest" message="tns:querySurveySessions"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/querySurveySessionsResponse" message="tns:querySurveySessionsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/querySurveySessions/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/querySurveySessions/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="queryContents">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/queryContentsRequest" message="tns:queryContents"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/queryContentsResponse" message="tns:queryContentsResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContents/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/queryContents/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createContentTag">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createContentTagRequest" message="tns:createContentTag"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createContentTagResponse" message="tns:createContentTagResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createContentTag/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createContentTag/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findWebPageById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findWebPageByIdRequest" message="tns:findWebPageById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findWebPageByIdResponse" message="tns:findWebPageByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findWebPageById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findWebPageById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createWebPage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createWebPageRequest" message="tns:createWebPage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createWebPageResponse" message="tns:createWebPageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createWebPage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createWebPage/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findSurveyById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findSurveyByIdRequest" message="tns:findSurveyById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findSurveyByIdResponse" message="tns:findSurveyByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findSurveyById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findSurveyById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createNewsletterRequest" message="tns:createNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createNewsletterResponse" message="tns:createNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createNewsletterFromTemplate">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createNewsletterFromTemplateRequest" message="tns:createNewsletterFromTemplate"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createNewsletterFromTemplateResponse" message="tns:createNewsletterFromTemplateResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createNewsletterFromTemplate/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createNewsletterFromTemplate/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="deleteNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/deleteNewsletterRequest" message="tns:deleteNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/deleteNewsletterResponse" message="tns:deleteNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/deleteNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/deleteNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createContent">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createContentRequest" message="tns:createContent"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createContentResponse" message="tns:createContentResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createContent/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createContent/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="deleteContent">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/deleteContentRequest" message="tns:deleteContent"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/deleteContentResponse" message="tns:deleteContentResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/deleteContent/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/deleteContent/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="insertContentInNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/insertContentInNewsletterRequest" message="tns:insertContentInNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/insertContentInNewsletterResponse" message="tns:insertContentInNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/insertContentInNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/insertContentInNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="createContainerInNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/createContainerInNewsletterRequest" message="tns:createContainerInNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/createContainerInNewsletterResponse" message="tns:createContainerInNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/createContainerInNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/createContainerInNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="updateContainerValuesInNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/updateContainerValuesInNewsletterRequest" message="tns:updateContainerValuesInNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/updateContainerValuesInNewsletterResponse" message="tns:updateContainerValuesInNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateContainerValuesInNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/updateContainerValuesInNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="clearContainerContentsInNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/clearContainerContentsInNewsletterRequest" message="tns:clearContainerContentsInNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/clearContainerContentsInNewsletterResponse" message="tns:clearContainerContentsInNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/clearContainerContentsInNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/clearContainerContentsInNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getContentsInNewsletter">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getContentsInNewsletterRequest" message="tns:getContentsInNewsletter"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getContentsInNewsletterResponse" message="tns:getContentsInNewsletterResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getContentsInNewsletter/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getContentsInNewsletter/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="findPlannedDeliveryById">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/findPlannedDeliveryByIdRequest" message="tns:findPlannedDeliveryById"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/findPlannedDeliveryByIdResponse" message="tns:findPlannedDeliveryByIdResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/findPlannedDeliveryById/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/findPlannedDeliveryById/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="saveReceivedMessage">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/saveReceivedMessageRequest" message="tns:saveReceivedMessage"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/saveReceivedMessageResponse" message="tns:saveReceivedMessageResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/saveReceivedMessage/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/saveReceivedMessage/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="requestReport">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/requestReportRequest" message="tns:requestReport"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/requestReportResponse" message="tns:requestReportResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/requestReport/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/requestReport/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getReportStatus">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getReportStatusRequest" message="tns:getReportStatus"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getReportStatusResponse" message="tns:getReportStatusResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getReportStatus/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getReportStatus/Fault/ServiceNotAvailableException"/>
</operation>
<operation name="getAllDeliverabilityClusters">
<input wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDeliverabilityClustersRequest" message="tns:getAllDeliverabilityClusters"/>
<output wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDeliverabilityClustersResponse" message="tns:getAllDeliverabilityClustersResponse"/>
<fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDeliverabilityClusters/Fault/AuthenticationFailedException"/>
<fault message="tns:ServiceNotAvailableException" name="ServiceNotAvailableException" wsam:Action="http://webservices.magnews/MagNewsAPI/getAllDeliverabilityClusters/Fault/ServiceNotAvailableException"/>
</operation>
</portType>
<binding name="MagNewsAPIPortBinding" type="tns:MagNewsAPI">
<wsp:PolicyReference URI="#MagNewsAPIPortBinding_MTOM_Policy"/>
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
<operation name="getVersion">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="addDataToContactsRowsSetFromFile">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="attachFileToNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchFindContactByFilter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="sendEmailMessage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
<fault name="InvalidMessageException">
<soap:fault name="InvalidMessageException" use="literal"/>
</fault>
</operation>
<operation name="batchSendOnDemandMessage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchSendSimpleMessage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchCancelSimpleMessages">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchSendEmailMessage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
<fault name="InvalidMessageException">
<soap:fault name="InvalidMessageException" use="literal"/>
</fault>
</operation>
<operation name="batchSendSmsMessage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
<fault name="InvalidMessageException">
<soap:fault name="InvalidMessageException" use="literal"/>
</fault>
</operation>
<operation name="sendSmsMessage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
<fault name="InvalidMessageException">
<soap:fault name="InvalidMessageException" use="literal"/>
</fault>
</operation>
<operation name="batchSendSingleNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchSubscribeContactToList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchUnsubscribeContactFromList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="calculateContactReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="callApplication">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createContactRowSet">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createCustomDataRowSet">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="addDataToCustomDataRowsSetFromFile">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="startBatchCustomTableUpdate">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="cancelBatch">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="addDataToContactsRowsSet">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="uploadMedia">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="downloadMedia">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findMediaByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createCustomContentType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createField">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="updateNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createSimpleStaticGroup">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createStaticGroupFromQuery">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createDynamicGroupFromQuery">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createStaticGroupFromNewsletterTarget">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createSimpleList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createSimpleSurvey">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="deleteCustomContentType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="destroyRowSetInfo">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="downloadContent">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="executeFormSubmission">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fetchBatchContactsUpdateReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fetchBatchCustomDataUpdateReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fetchContacts">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fetchContactsReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fetchDeliveryStatus">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fetchDetailedContactReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fetchDetailedContactSMSReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fetchDetailedNewsletterReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fetchFormSubmissions">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fetchNewsletters">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fetchSurveySessions">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findContactListSubscriptionToList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findCustomContentTypeById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchFindContactById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchFindContactByPrimaryKey">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchFindContactByPrimaryKeyEx">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchFindContactListSubscriptionToList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchGetMessageStatus">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchGetSimpleMessageStatus">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchGetSimpleMessageStatusByExternalId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchMergeContactAndSendOnDemandMessage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findFieldByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findListById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getActiveDeliveryStatus">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllContentTags">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllWebDomains">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllFieldsInPage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllFieldsInSurvey">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllSurveys">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllWebSites">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getBasicDatabaseReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getBasicNewsletterReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getNewsletterReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getBatchStatusInfo">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getDeliveryStatus">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getDeliveryStatusForNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getFieldsByDatabase">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getGroupsByDatabase">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getListsByDatabase">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getMessageStatus">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getNewsletterDetails">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getNewsletterWebVersionLink">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getRowSetInfo">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getSimpleMessageStatus">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getWebPageLink">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="fillNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="insertContentInWebPage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="mergeContact">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="mergeContactAndSendOnDemandMessage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryContactsByField">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryContactsByFilter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryContactsByGroup">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryContactsByList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryContactsReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryDeliveryStatus">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryDeliveries">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryDetailedContactReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryDetailedContactSMSReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryDetailedNewsletterReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryFormSubmissions">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryNewslettersByCampaign">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="renderContent">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="requestDeliveryStatusAction">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="saveContactEvent">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getSimpleMessageEvents">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
<fault name="StatsException">
<soap:fault name="StatsException" use="literal"/>
</fault>
</operation>
<operation name="saveNewsletterCustomHeaders">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="searchContents">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="sendNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="sendSingleNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="startBatchContactsUpdate">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="subscribeContactToList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="unsubscribeContactFromList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="updateCustomContentType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="updateField">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="updateList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="describeBounceCategories">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="executeUpdate">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="executeSql">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="executeSimpleQuery">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllPlannedDeliveries">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllDeliveryPolicies">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getSimpleMessageTypeReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="enterWorkflow">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="downloadReportAttachment">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="batchMergeContacts">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryContacts">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findContactByPrimaryKey">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findContactById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="loginContact">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findContactsByField">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="countContacts">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryNewsletters">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="subscribeContact">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="unsubscribeContact">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllDatabases">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findDatabaseById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createSimpleGroup">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllSimpleMessageTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findSimpleMessageTypeById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllSimpleMessageCategories">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findSimpleMessageCategoryById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createSimpleMessageType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="updateSimpleMessageType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createSimpleMessageCategory">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="updateSimpleMessageCategory">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findGroupById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryGroups">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="deleteGroup">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="sendSimpleMessage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="sendOnDemandMessage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findCampaignById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllCampaigns">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createCampaign">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="updateCampaign">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findNewsletterById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllNewsletterTemplates">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="querySurveySessions">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="queryContents">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createContentTag">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findWebPageById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createWebPage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findSurveyById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createNewsletterFromTemplate">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="deleteNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createContent">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="deleteContent">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="insertContentInNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="createContainerInNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="updateContainerValuesInNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="clearContainerContentsInNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getContentsInNewsletter">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="findPlannedDeliveryById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="saveReceivedMessage">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="requestReport">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getReportStatus">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="getAllDeliverabilityClusters">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AuthenticationFailedException">
<soap:fault name="AuthenticationFailedException" use="literal"/>
</fault>
<fault name="ServiceNotAvailableException">
<soap:fault name="ServiceNotAvailableException" use="literal"/>
</fault>
</operation>
</binding>
<service name="MagNewsAPIService">
<port name="MagNewsAPIPort" binding="tns:MagNewsAPIPortBinding">
<soap:address location="https://ws-mn1.mag-news.it:443/ws/MagNewsAPIService"/>
</port>
</service>
</definitions>