package it.giunti.apg.server.persistence;

import it.giunti.apg.shared.model.FeedbackAnagrafiche;

import java.io.Serializable;
import java.util.List;

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.type.IntegerType;

public class FeedbackAnagraficheDao implements BaseDao<FeedbackAnagrafiche> {

	@Override
	public void update(Session ses, FeedbackAnagrafiche instance) throws HibernateException {
		GenericDao.updateGeneric(ses, instance.getId(), instance);
	}

	@Override
	public Serializable save(Session ses, FeedbackAnagrafiche transientInstance)
			throws HibernateException {
		Integer id = (Integer)GenericDao.saveGeneric(ses, transientInstance);
		return id;
	}

	@Override
	public void delete(Session ses, FeedbackAnagrafiche instance)
			throws HibernateException {
		try {
			GenericDao.deleteGeneric(ses, instance.getId(), instance);
		} catch (HibernateException e) {
			throw new HibernateException("FeedbackAnagrafiche " + instance.getCodiceCliente() +
					": "+e.getMessage(), e);
		}
	}
	
	@SuppressWarnings("unchecked")
	public List<FeedbackAnagrafiche> findByFeedback(Session ses, Integer offset,
			Integer size) throws HibernateException {
		//Analisi searchString
		String qs = "from FeedbackAnagrafiche fa where "+
				"fa.dataFeedback is not null and "+
				"fa.dataAcquisizione is null "+
				"order by fa.dataFeedback desc";
		Query q = ses.createQuery(qs);
		q.setFirstResult(offset);
		q.setMaxResults(size);
		List<FeedbackAnagrafiche> anaList = (List<FeedbackAnagrafiche>) q.list();
		if (anaList != null) {
			if (anaList.size() > 0) {
				return anaList;
			}
		}
		return anaList;
	}
	
	@SuppressWarnings("unchecked")
	public FeedbackAnagrafiche findByIdAnagrafica(Session ses, Integer idAnagrafica)
			throws HibernateException {
		//Analisi searchString
		String qs = "from FeedbackAnagrafiche fa where "+
				"fa.idAnagrafica = :id1";
		Query q = ses.createQuery(qs);
		q.setParameter("id1", idAnagrafica, IntegerType.INSTANCE);
		List<FeedbackAnagrafiche> anaList = (List<FeedbackAnagrafiche>) q.list();
		if (anaList != null) {
			if (anaList.size() > 0) {
				return anaList.get(0);
			}
		}
		return null;
	}

}
