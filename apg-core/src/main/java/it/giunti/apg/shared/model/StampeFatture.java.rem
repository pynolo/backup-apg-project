/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package it.giunti.apg.shared.model;

import java.util.Date;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Lob;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 *
 * @author paolo
 */
@Entity
@Table(name = "stampe_fatture")
public class StampeFatture extends BaseEntity {
	@SuppressWarnings("unused")
	private static final long serialVersionUID = -251678205199803560L;
	@Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "id", nullable = false)
    private Integer id;
	@Basic(optional = false)
	@Column(name = "id_anagrafica", nullable = false)
    private Integer idAnagrafica;
	@Basic(optional = false)
	@Column(name = "id_societa", nullable = false, length=4)
    private String idSocieta;
	@Column(name = "id_periodico")
    private Integer idPeriodico;
	@Column(name = "id_istanza")
    private Integer idIstanza;
    @Basic(optional = false)
    @Lob
    @Column(name = "content", nullable = false)
    private byte[] content;
    @Basic(optional = false)
    @Column(name = "mime_type", nullable = false, length = 128)
    private String mimeType;
    @Basic(optional = false)
    @Column(name = "data_fattura", nullable = false)
    @Temporal(TemporalType.DATE)
    private Date dataFattura;
	@Basic(optional = false)
	@Column(name = "totale_finale", nullable = false, precision = 9, scale = 2)
	private Double totaleFinale;
	@Basic(optional = false)
	@Column(name = "totale_iva", nullable = false, precision = 9, scale = 2)
	private Double totaleIva;
	@Basic(optional = false)
	@Column(name = "totale_imponibile", nullable = false, precision = 9, scale = 2)
	private Double totaleImponibile;
	@Basic(optional = false)
    @Column(name = "numero_fattura", nullable = false, length = 64)
    private String numeroFattura;
	@Basic(optional = false)
    @Column(name = "file_name", nullable = false, length = 256)
    private String fileName;
    @Column(name = "data_email")
    @Temporal(TemporalType.TIMESTAMP)
    private Date dataEmail;
    @Basic(optional = false)
    @Column(name = "data_creazione", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date dataCreazione;
    
    public StampeFatture() {
    }

    public StampeFatture(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public byte[] getContent() {
        return content;
    }

    public void setContent(byte[] content) {
        this.content = content;
    }

	public Integer getIdAnagrafica() {
		return idAnagrafica;
	}

	public void setIdAnagrafica(Integer idAnagrafica) {
		this.idAnagrafica = idAnagrafica;
	}

	public String getIdSocieta() {
		return idSocieta;
	}

	public void setIdSocieta(String idSocieta) {
		this.idSocieta = idSocieta;
	}

	public Integer getIdPeriodico() {
		return idPeriodico;
	}

	public void setIdPeriodico(Integer idPeriodico) {
		this.idPeriodico = idPeriodico;
	}

	public Integer getIdIstanza() {
		return idIstanza;
	}

	public void setIdIstanza(Integer idIstanza) {
		this.idIstanza = idIstanza;
	}

	public String getMimeType() {
		return mimeType;
	}

	public void setMimeType(String mimeType) {
		this.mimeType = mimeType;
	}
	
	public Date getDataFattura() {
		return dataFattura;
	}

	public void setDataFattura(Date dataFattura) {
		this.dataFattura = dataFattura;
	}

	public Double getTotaleFinale() {
		return totaleFinale;
	}

	public void setTotaleFinale(Double totaleFinale) {
		this.totaleFinale = totaleFinale;
	}

	public Double getTotaleIva() {
		return totaleIva;
	}

	public void setTotaleIva(Double totaleIva) {
		this.totaleIva = totaleIva;
	}

	public Double getTotaleImponibile() {
		return totaleImponibile;
	}

	public void setTotaleImponibile(Double totaleImponibile) {
		this.totaleImponibile = totaleImponibile;
	}

	public String getNumeroFattura() {
		return numeroFattura;
	}

	public void setNumeroFattura(String numeroFattura) {
		this.numeroFattura = numeroFattura;
	}

	public String getFileName() {
		return fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	public Date getDataEmail() {
		return dataEmail;
	}

	public void setDataEmail(Date dataEmail) {
		this.dataEmail = dataEmail;
	}

	public Date getDataCreazione() {
		return dataCreazione;
	}

	public void setDataCreazione(Date dataCreazione) {
		this.dataCreazione = dataCreazione;
	}

	@Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        if (!(object instanceof StampeFatture)) {
            return false;
        }
        StampeFatture other = (StampeFatture) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "StampeFatture[id=" + id + "]";
    }

}
