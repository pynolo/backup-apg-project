
package it.giunti.apg.soap.magnews;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "MagNewsAPI", targetNamespace = "http://webservices.magnews/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MagNewsAPI {


    /**
     * 
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVersion", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetVersion")
    @ResponseWrapper(localName = "getVersionResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetVersionResponse")
    public String getVersion()
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param fileOptions
     * @param data
     * @param credentials
     * @param idRowSet
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addDataToContactsRowsSetFromFile", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.AddDataToContactsRowsSetFromFile")
    @ResponseWrapper(localName = "addDataToContactsRowsSetFromFileResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.AddDataToContactsRowsSetFromFileResponse")
    public String addDataToContactsRowsSetFromFile(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "data", targetNamespace = "")
        byte[] data,
        @WebParam(name = "fileOptions", targetNamespace = "")
        FileOptions fileOptions,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idContent
     * @param idNewsletter
     * @param format
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "attachFileToNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.AttachFileToNewsletter")
    @ResponseWrapper(localName = "attachFileToNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.AttachFileToNewsletterResponse")
    public void attachFileToNewsletter(
        @WebParam(name = "idContent", targetNamespace = "")
        String idContent,
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "format", targetNamespace = "")
        String format,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param filter
     * @param credentials
     * @param idDatabase
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContact>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchFindContactByFilter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchFindContactByFilter")
    @ResponseWrapper(localName = "batchFindContactByFilterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchFindContactByFilterResponse")
    public List<MnContact> batchFindContactByFilter(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "filter", targetNamespace = "")
        Filter filter,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param message
     * @param option
     * @return
     *     returns it.giunti.apg.soap.magnews.MnSimpleMessageStatus
     * @throws InvalidMessageException_Exception
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendEmailMessage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendEmailMessage")
    @ResponseWrapper(localName = "sendEmailMessageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendEmailMessageResponse")
    public MnSimpleMessageStatus sendEmailMessage(
        @WebParam(name = "message", targetNamespace = "")
        EmailMessage message,
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, InvalidMessageException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @param idDatabase
     * @param contactPrimaryKeys
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.OnDemandMessage>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchSendOnDemandMessage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSendOnDemandMessage")
    @ResponseWrapper(localName = "batchSendOnDemandMessageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSendOnDemandMessageResponse")
    public List<OnDemandMessage> batchSendOnDemandMessage(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "contactPrimaryKeys", targetNamespace = "")
        List<String> contactPrimaryKeys,
        @WebParam(name = "options", targetNamespace = "")
        List<OnDemandMessageOptions> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param messag
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.SendSimpleMessageOperation>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchSendSimpleMessage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSendSimpleMessage")
    @ResponseWrapper(localName = "batchSendSimpleMessageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSendSimpleMessageResponse")
    public List<SendSimpleMessageOperation> batchSendSimpleMessage(
        @WebParam(name = "messag", targetNamespace = "")
        List<SendSimpleMessageValues> messag,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idMessage
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.SendSimpleMessageOperation>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchCancelSimpleMessages", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchCancelSimpleMessages")
    @ResponseWrapper(localName = "batchCancelSimpleMessagesResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchCancelSimpleMessagesResponse")
    public List<SendSimpleMessageOperation> batchCancelSimpleMessages(
        @WebParam(name = "idMessage", targetNamespace = "")
        List<String> idMessage,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param message
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.BatchEmailMessageOperation>
     * @throws InvalidMessageException_Exception
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchSendEmailMessage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSendEmailMessage")
    @ResponseWrapper(localName = "batchSendEmailMessageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSendEmailMessageResponse")
    public List<BatchEmailMessageOperation> batchSendEmailMessage(
        @WebParam(name = "message", targetNamespace = "")
        List<BatchEmailMessage> message,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, InvalidMessageException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param message
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.BatchSmsMessageOperation>
     * @throws InvalidMessageException_Exception
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchSendSmsMessage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSendSmsMessage")
    @ResponseWrapper(localName = "batchSendSmsMessageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSendSmsMessageResponse")
    public List<BatchSmsMessageOperation> batchSendSmsMessage(
        @WebParam(name = "message", targetNamespace = "")
        List<BatchSmsMessage> message,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, InvalidMessageException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param message
     * @param option
     * @return
     *     returns it.giunti.apg.soap.magnews.MnSimpleMessageStatus
     * @throws InvalidMessageException_Exception
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendSmsMessage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendSmsMessage")
    @ResponseWrapper(localName = "sendSmsMessageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendSmsMessageResponse")
    public MnSimpleMessageStatus sendSmsMessage(
        @WebParam(name = "message", targetNamespace = "")
        SmsMessage message,
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, InvalidMessageException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param message
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.SendSingleNewsletterOperation>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchSendSingleNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSendSingleNewsletter")
    @ResponseWrapper(localName = "batchSendSingleNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSendSingleNewsletterResponse")
    public List<SendSingleNewsletterOperation> batchSendSingleNewsletter(
        @WebParam(name = "message", targetNamespace = "")
        List<SendSingleNewsletterValues> message,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idSubscriptionCause
     * @param idDatabase
     * @param primaryKeyValues
     * @param idList
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContactOperation>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchSubscribeContactToList", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSubscribeContactToList")
    @ResponseWrapper(localName = "batchSubscribeContactToListResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchSubscribeContactToListResponse")
    public List<MnContactOperation> batchSubscribeContactToList(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "primaryKeyValues", targetNamespace = "")
        List<String> primaryKeyValues,
        @WebParam(name = "idList", targetNamespace = "")
        String idList,
        @WebParam(name = "idSubscriptionCause", targetNamespace = "")
        String idSubscriptionCause,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idUnsubscriptionCause
     * @param credentials
     * @param idDatabase
     * @param primaryKeyValues
     * @param idList
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContactOperation>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchUnsubscribeContactFromList", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchUnsubscribeContactFromList")
    @ResponseWrapper(localName = "batchUnsubscribeContactFromListResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchUnsubscribeContactFromListResponse")
    public List<MnContactOperation> batchUnsubscribeContactFromList(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "primaryKeyValues", targetNamespace = "")
        List<String> primaryKeyValues,
        @WebParam(name = "idList", targetNamespace = "")
        String idList,
        @WebParam(name = "idUnsubscriptionCause", targetNamespace = "")
        String idUnsubscriptionCause,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idContact
     * @param credentials
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.MnContactReport
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculateContactReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CalculateContactReport")
    @ResponseWrapper(localName = "calculateContactReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CalculateContactReportResponse")
    public MnContactReport calculateContactReport(
        @WebParam(name = "idContact", targetNamespace = "")
        String idContact,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param appId
     * @param clientInfo
     * @param operationName
     * @param parameters
     * @param authInfo
     * @return
     *     returns it.giunti.apg.soap.magnews.ApplicationResult
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "callApplication", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CallApplication")
    @ResponseWrapper(localName = "callApplicationResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CallApplicationResponse")
    public ApplicationResult callApplication(
        @WebParam(name = "authInfo", targetNamespace = "")
        AuthInfo authInfo,
        @WebParam(name = "clientInfo", targetNamespace = "")
        ClientInfo clientInfo,
        @WebParam(name = "appId", targetNamespace = "")
        String appId,
        @WebParam(name = "operationName", targetNamespace = "")
        String operationName,
        @WebParam(name = "parameters", targetNamespace = "")
        ApplicationParameters parameters)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createContactRowSet", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateContactRowSet")
    @ResponseWrapper(localName = "createContactRowSetResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateContactRowSetResponse")
    public String createContactRowSet(
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createCustomDataRowSet", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateCustomDataRowSet")
    @ResponseWrapper(localName = "createCustomDataRowSetResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateCustomDataRowSetResponse")
    public String createCustomDataRowSet(
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param fileOptions
     * @param data
     * @param credentials
     * @param idRowSet
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addDataToCustomDataRowsSetFromFile", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.AddDataToCustomDataRowsSetFromFile")
    @ResponseWrapper(localName = "addDataToCustomDataRowsSetFromFileResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.AddDataToCustomDataRowsSetFromFileResponse")
    public String addDataToCustomDataRowsSetFromFile(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "data", targetNamespace = "")
        byte[] data,
        @WebParam(name = "fileOptions", targetNamespace = "")
        FileOptions fileOptions,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param advancedOptions
     * @param idRowSet
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "startBatchCustomTableUpdate", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.StartBatchCustomTableUpdate")
    @ResponseWrapper(localName = "startBatchCustomTableUpdateResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.StartBatchCustomTableUpdateResponse")
    public String startBatchCustomTableUpdate(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "options", targetNamespace = "")
        MnCustomDataBatchStartOptions options,
        @WebParam(name = "advancedOptions", targetNamespace = "")
        List<Option> advancedOptions,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idBatch
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "cancelBatch", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CancelBatch")
    @ResponseWrapper(localName = "cancelBatchResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CancelBatchResponse")
    public void cancelBatch(
        @WebParam(name = "idBatch", targetNamespace = "")
        String idBatch,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param data
     * @param credentials
     * @param idRowSet
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addDataToContactsRowsSet", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.AddDataToContactsRowsSet")
    @ResponseWrapper(localName = "addDataToContactsRowsSetResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.AddDataToContactsRowsSetResponse")
    public String addDataToContactsRowsSet(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "data", targetNamespace = "")
        List<RawContactData> data,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @param media
     * @return
     *     returns it.giunti.apg.soap.magnews.Media
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "uploadMedia", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UploadMedia")
    @ResponseWrapper(localName = "uploadMediaResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UploadMediaResponse")
    public Media uploadMedia(
        @WebParam(name = "media", targetNamespace = "")
        Media media,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @param idmedia
     * @return
     *     returns it.giunti.apg.soap.magnews.Media
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "downloadMedia", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DownloadMedia")
    @ResponseWrapper(localName = "downloadMediaResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DownloadMediaResponse")
    public Media downloadMedia(
        @WebParam(name = "idmedia", targetNamespace = "")
        String idmedia,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param name
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.Media
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMediaByName", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindMediaByName")
    @ResponseWrapper(localName = "findMediaByNameResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindMediaByNameResponse")
    public Media findMediaByName(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param template
     * @param credentials
     * @param name
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createCustomContentType", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateCustomContentType")
    @ResponseWrapper(localName = "createCustomContentTypeResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateCustomContentTypeResponse")
    public String createCustomContentType(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "template", targetNamespace = "")
        String template,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param fieldOptions
     * @param dataType
     * @param idDatabase
     * @param name
     * @param subDataType
     * @param options
     * @param label
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createField", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateField")
    @ResponseWrapper(localName = "createFieldResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateFieldResponse")
    public String createField(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "label", targetNamespace = "")
        String label,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "dataType", targetNamespace = "")
        String dataType,
        @WebParam(name = "subDataType", targetNamespace = "")
        String subDataType,
        @WebParam(name = "fieldOptions", targetNamespace = "")
        MnFieldOptions fieldOptions,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @param options
     * @param content
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateNewsletter")
    @ResponseWrapper(localName = "updateNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateNewsletterResponse")
    public void updateNewsletter(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "content", targetNamespace = "")
        Content content,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param groupName
     * @param credentials
     * @param idDatabase
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSimpleStaticGroup", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleStaticGroup")
    @ResponseWrapper(localName = "createSimpleStaticGroupResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleStaticGroupResponse")
    public String createSimpleStaticGroup(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "groupName", targetNamespace = "")
        String groupName,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param query
     * @param idDatabase
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createStaticGroupFromQuery", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateStaticGroupFromQuery")
    @ResponseWrapper(localName = "createStaticGroupFromQueryResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateStaticGroupFromQueryResponse")
    public String createStaticGroupFromQuery(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param query
     * @param idDatabase
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createDynamicGroupFromQuery", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateDynamicGroupFromQuery")
    @ResponseWrapper(localName = "createDynamicGroupFromQueryResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateDynamicGroupFromQueryResponse")
    public String createDynamicGroupFromQuery(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createStaticGroupFromNewsletterTarget", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateStaticGroupFromNewsletterTarget")
    @ResponseWrapper(localName = "createStaticGroupFromNewsletterTargetResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateStaticGroupFromNewsletterTargetResponse")
    public String createStaticGroupFromNewsletterTarget(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @param name
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSimpleList", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleList")
    @ResponseWrapper(localName = "createSimpleListResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleListResponse")
    public String createSimpleList(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param name
     * @param options
     * @param idWebsite
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSimpleSurvey", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleSurvey")
    @ResponseWrapper(localName = "createSimpleSurveyResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleSurveyResponse")
    public String createSimpleSurvey(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "idWebsite", targetNamespace = "")
        String idWebsite,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @param idCustomContentType
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteCustomContentType", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DeleteCustomContentType")
    @ResponseWrapper(localName = "deleteCustomContentTypeResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DeleteCustomContentTypeResponse")
    public String deleteCustomContentType(
        @WebParam(name = "idCustomContentType", targetNamespace = "")
        String idCustomContentType,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idRowSet
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "destroyRowSetInfo", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DestroyRowSetInfo")
    @ResponseWrapper(localName = "destroyRowSetInfoResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DestroyRowSetInfoResponse")
    public void destroyRowSetInfo(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idContent
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.Content
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "downloadContent", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DownloadContent")
    @ResponseWrapper(localName = "downloadContentResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DownloadContentResponse")
    public Content downloadContent(
        @WebParam(name = "idContent", targetNamespace = "")
        String idContent,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param ipaddress
     * @param idContact
     * @param idSurveySession
     * @param credentials
     * @param options
     * @param idPage
     * @param parameters
     * @param securityCheck
     * @return
     *     returns it.giunti.apg.soap.magnews.MnFormSubmissionResult
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeFormSubmission", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.ExecuteFormSubmission")
    @ResponseWrapper(localName = "executeFormSubmissionResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.ExecuteFormSubmissionResponse")
    public MnFormSubmissionResult executeFormSubmission(
        @WebParam(name = "idPage", targetNamespace = "")
        String idPage,
        @WebParam(name = "parameters", targetNamespace = "")
        List<FieldValue> parameters,
        @WebParam(name = "idContact", targetNamespace = "")
        String idContact,
        @WebParam(name = "securityCheck", targetNamespace = "")
        String securityCheck,
        @WebParam(name = "ipaddress", targetNamespace = "")
        String ipaddress,
        @WebParam(name = "idSurveySession", targetNamespace = "")
        String idSurveySession,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param toIndex
     * @param credentials
     * @param idRowSet
     * @param fromIndex
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContactOperation>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchBatchContactsUpdateReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchBatchContactsUpdateReport")
    @ResponseWrapper(localName = "fetchBatchContactsUpdateReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchBatchContactsUpdateReportResponse")
    public List<MnContactOperation> fetchBatchContactsUpdateReport(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "fromIndex", targetNamespace = "")
        int fromIndex,
        @WebParam(name = "toIndex", targetNamespace = "")
        int toIndex,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param toIndex
     * @param credentials
     * @param idRowSet
     * @param fromIndex
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnCustomDataMergeOperation>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchBatchCustomDataUpdateReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchBatchCustomDataUpdateReport")
    @ResponseWrapper(localName = "fetchBatchCustomDataUpdateReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchBatchCustomDataUpdateReportResponse")
    public List<MnCustomDataMergeOperation> fetchBatchCustomDataUpdateReport(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "fromIndex", targetNamespace = "")
        int fromIndex,
        @WebParam(name = "toIndex", targetNamespace = "")
        int toIndex,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param toIndex
     * @param credentials
     * @param idRowSet
     * @param fromIndex
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContact>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchContacts", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchContacts")
    @ResponseWrapper(localName = "fetchContactsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchContactsResponse")
    public List<MnContact> fetchContacts(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "fromIndex", targetNamespace = "")
        int fromIndex,
        @WebParam(name = "toIndex", targetNamespace = "")
        int toIndex,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param toIndex
     * @param credentials
     * @param idRowSet
     * @param fromIndex
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContactReport>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchContactsReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchContactsReport")
    @ResponseWrapper(localName = "fetchContactsReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchContactsReportResponse")
    public List<MnContactReport> fetchContactsReport(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "fromIndex", targetNamespace = "")
        int fromIndex,
        @WebParam(name = "toIndex", targetNamespace = "")
        int toIndex,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param toIndex
     * @param credentials
     * @param idRowSet
     * @param fromIndex
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnDeliveryStatus>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchDeliveryStatus", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchDeliveryStatus")
    @ResponseWrapper(localName = "fetchDeliveryStatusResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchDeliveryStatusResponse")
    public List<MnDeliveryStatus> fetchDeliveryStatus(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "fromIndex", targetNamespace = "")
        int fromIndex,
        @WebParam(name = "toIndex", targetNamespace = "")
        int toIndex,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param toIndex
     * @param credentials
     * @param idRowSet
     * @param fromIndex
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContactNewsletterReport>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchDetailedContactReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchDetailedContactReport")
    @ResponseWrapper(localName = "fetchDetailedContactReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchDetailedContactReportResponse")
    public List<MnContactNewsletterReport> fetchDetailedContactReport(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "fromIndex", targetNamespace = "")
        int fromIndex,
        @WebParam(name = "toIndex", targetNamespace = "")
        int toIndex,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param toIndex
     * @param credentials
     * @param idRowSet
     * @param fromIndex
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContactNewsletterSMSReport>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchDetailedContactSMSReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchDetailedContactSMSReport")
    @ResponseWrapper(localName = "fetchDetailedContactSMSReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchDetailedContactSMSReportResponse")
    public List<MnContactNewsletterSMSReport> fetchDetailedContactSMSReport(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "fromIndex", targetNamespace = "")
        int fromIndex,
        @WebParam(name = "toIndex", targetNamespace = "")
        int toIndex,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param toIndex
     * @param credentials
     * @param idRowSet
     * @param fromIndex
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContactNewsletterReport>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchDetailedNewsletterReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchDetailedNewsletterReport")
    @ResponseWrapper(localName = "fetchDetailedNewsletterReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchDetailedNewsletterReportResponse")
    public List<MnContactNewsletterReport> fetchDetailedNewsletterReport(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "fromIndex", targetNamespace = "")
        int fromIndex,
        @WebParam(name = "toIndex", targetNamespace = "")
        int toIndex,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param toIndex
     * @param credentials
     * @param idRowSet
     * @param fromIndex
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnFormSubmission>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchFormSubmissions", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchFormSubmissions")
    @ResponseWrapper(localName = "fetchFormSubmissionsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchFormSubmissionsResponse")
    public List<MnFormSubmission> fetchFormSubmissions(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "fromIndex", targetNamespace = "")
        int fromIndex,
        @WebParam(name = "toIndex", targetNamespace = "")
        int toIndex,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param toIndex
     * @param credentials
     * @param idRowSet
     * @param fromIndex
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnNewsletter>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchNewsletters", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchNewsletters")
    @ResponseWrapper(localName = "fetchNewslettersResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchNewslettersResponse")
    public List<MnNewsletter> fetchNewsletters(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "fromIndex", targetNamespace = "")
        int fromIndex,
        @WebParam(name = "toIndex", targetNamespace = "")
        int toIndex,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param toIndex
     * @param credentials
     * @param idRowSet
     * @param fromIndex
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnSurveySession>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchSurveySessions", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchSurveySessions")
    @ResponseWrapper(localName = "fetchSurveySessionsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FetchSurveySessionsResponse")
    public List<MnSurveySession> fetchSurveySessions(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "fromIndex", targetNamespace = "")
        int fromIndex,
        @WebParam(name = "toIndex", targetNamespace = "")
        int toIndex,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @param idList
     * @param primaryKeyValue
     * @return
     *     returns it.giunti.apg.soap.magnews.MnContactListSubscriptionInfo
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findContactListSubscriptionToList", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindContactListSubscriptionToList")
    @ResponseWrapper(localName = "findContactListSubscriptionToListResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindContactListSubscriptionToListResponse")
    public MnContactListSubscriptionInfo findContactListSubscriptionToList(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "primaryKeyValue", targetNamespace = "")
        String primaryKeyValue,
        @WebParam(name = "idList", targetNamespace = "")
        String idList,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idCustomContentType
     * @return
     *     returns it.giunti.apg.soap.magnews.MnCustomContentType
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCustomContentTypeById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindCustomContentTypeById")
    @ResponseWrapper(localName = "findCustomContentTypeByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindCustomContentTypeByIdResponse")
    public MnCustomContentType findCustomContentTypeById(
        @WebParam(name = "idCustomContentType", targetNamespace = "")
        String idCustomContentType,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idContacts
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContact>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchFindContactById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchFindContactById")
    @ResponseWrapper(localName = "batchFindContactByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchFindContactByIdResponse")
    public List<MnContact> batchFindContactById(
        @WebParam(name = "idContacts", targetNamespace = "")
        List<String> idContacts,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @param primaryKeyValues
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContact>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchFindContactByPrimaryKey", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchFindContactByPrimaryKey")
    @ResponseWrapper(localName = "batchFindContactByPrimaryKeyResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchFindContactByPrimaryKeyResponse")
    public List<MnContact> batchFindContactByPrimaryKey(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "primaryKeyValues", targetNamespace = "")
        List<String> primaryKeyValues,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @param options
     * @param primaryKeyValues
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContact>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchFindContactByPrimaryKeyEx", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchFindContactByPrimaryKeyEx")
    @ResponseWrapper(localName = "batchFindContactByPrimaryKeyExResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchFindContactByPrimaryKeyExResponse")
    public List<MnContact> batchFindContactByPrimaryKeyEx(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "primaryKeyValues", targetNamespace = "")
        List<String> primaryKeyValues,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @param primaryKeyValues
     * @param idList
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContactListSubscriptionInfo>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchFindContactListSubscriptionToList", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchFindContactListSubscriptionToList")
    @ResponseWrapper(localName = "batchFindContactListSubscriptionToListResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchFindContactListSubscriptionToListResponse")
    public List<MnContactListSubscriptionInfo> batchFindContactListSubscriptionToList(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "primaryKeyValues", targetNamespace = "")
        List<String> primaryKeyValues,
        @WebParam(name = "idList", targetNamespace = "")
        String idList,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idLaunch
     * @param options
     * @param idMessages
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnMessageStatus>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchGetMessageStatus", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchGetMessageStatus")
    @ResponseWrapper(localName = "batchGetMessageStatusResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchGetMessageStatusResponse")
    public List<MnMessageStatus> batchGetMessageStatus(
        @WebParam(name = "idLaunch", targetNamespace = "")
        String idLaunch,
        @WebParam(name = "idMessages", targetNamespace = "")
        List<String> idMessages,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idMessages
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnSimpleMessageStatus>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchGetSimpleMessageStatus", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchGetSimpleMessageStatus")
    @ResponseWrapper(localName = "batchGetSimpleMessageStatusResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchGetSimpleMessageStatusResponse")
    public List<MnSimpleMessageStatus> batchGetSimpleMessageStatus(
        @WebParam(name = "idMessages", targetNamespace = "")
        List<String> idMessages,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param externalId
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnSimpleMessageStatus>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchGetSimpleMessageStatusByExternalId", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchGetSimpleMessageStatusByExternalId")
    @ResponseWrapper(localName = "batchGetSimpleMessageStatusByExternalIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchGetSimpleMessageStatusByExternalIdResponse")
    public List<MnSimpleMessageStatus> batchGetSimpleMessageStatusByExternalId(
        @WebParam(name = "externalId", targetNamespace = "")
        List<String> externalId,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param mergeOptions
     * @param values
     * @param idNewsletter
     * @param idDatabase
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MergeAndSendOperation>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchMergeContactAndSendOnDemandMessage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchMergeContactAndSendOnDemandMessage")
    @ResponseWrapper(localName = "batchMergeContactAndSendOnDemandMessageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchMergeContactAndSendOnDemandMessageResponse")
    public List<MergeAndSendOperation> batchMergeContactAndSendOnDemandMessage(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "values", targetNamespace = "")
        List<BatchMergeValues> values,
        @WebParam(name = "mergeOptions", targetNamespace = "")
        List<Option> mergeOptions,
        @WebParam(name = "options", targetNamespace = "")
        List<OnDemandMessageOptions> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @param name
     * @return
     *     returns it.giunti.apg.soap.magnews.MnFieldInfo
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findFieldByName", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindFieldByName")
    @ResponseWrapper(localName = "findFieldByNameResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindFieldByNameResponse")
    public MnFieldInfo findFieldByName(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @param idList
     * @return
     *     returns it.giunti.apg.soap.magnews.MnList
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findListById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindListById")
    @ResponseWrapper(localName = "findListByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindListByIdResponse")
    public MnList findListById(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "idList", targetNamespace = "")
        String idList,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idCampaign
     * @param credentials
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnDeliveryStatus>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getActiveDeliveryStatus", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetActiveDeliveryStatus")
    @ResponseWrapper(localName = "getActiveDeliveryStatusResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetActiveDeliveryStatusResponse")
    public List<MnDeliveryStatus> getActiveDeliveryStatus(
        @WebParam(name = "idCampaign", targetNamespace = "")
        String idCampaign,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContentTag>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllContentTags", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllContentTags")
    @ResponseWrapper(localName = "getAllContentTagsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllContentTagsResponse")
    public List<MnContentTag> getAllContentTags(
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnWebDomain>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllWebDomains", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllWebDomains")
    @ResponseWrapper(localName = "getAllWebDomainsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllWebDomainsResponse")
    public List<MnWebDomain> getAllWebDomains(
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idPage
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnFormField>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllFieldsInPage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllFieldsInPage")
    @ResponseWrapper(localName = "getAllFieldsInPageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllFieldsInPageResponse")
    public List<MnFormField> getAllFieldsInPage(
        @WebParam(name = "idPage", targetNamespace = "")
        String idPage,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idSurvey
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnFormField>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllFieldsInSurvey", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllFieldsInSurvey")
    @ResponseWrapper(localName = "getAllFieldsInSurveyResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllFieldsInSurveyResponse")
    public List<MnFormField> getAllFieldsInSurvey(
        @WebParam(name = "idSurvey", targetNamespace = "")
        String idSurvey,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idWebsite
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnSurvey>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllSurveys", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllSurveys")
    @ResponseWrapper(localName = "getAllSurveysResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllSurveysResponse")
    public List<MnSurvey> getAllSurveys(
        @WebParam(name = "idWebsite", targetNamespace = "")
        String idWebsite,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnWebSite>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllWebSites", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllWebSites")
    @ResponseWrapper(localName = "getAllWebSitesResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllWebSitesResponse")
    public List<MnWebSite> getAllWebSites(
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @return
     *     returns it.giunti.apg.soap.magnews.MnDatabaseReport
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBasicDatabaseReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetBasicDatabaseReport")
    @ResponseWrapper(localName = "getBasicDatabaseReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetBasicDatabaseReportResponse")
    public MnDatabaseReport getBasicDatabaseReport(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @return
     *     returns it.giunti.apg.soap.magnews.MnNewsletterReport
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBasicNewsletterReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetBasicNewsletterReport")
    @ResponseWrapper(localName = "getBasicNewsletterReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetBasicNewsletterReportResponse")
    public MnNewsletterReport getBasicNewsletterReport(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.MnNewsletterReport
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNewsletterReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetNewsletterReport")
    @ResponseWrapper(localName = "getNewsletterReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetNewsletterReportResponse")
    public MnNewsletterReport getNewsletterReport(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idBatch
     * @return
     *     returns it.giunti.apg.soap.magnews.MnBatchStatusInfo
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBatchStatusInfo", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetBatchStatusInfo")
    @ResponseWrapper(localName = "getBatchStatusInfoResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetBatchStatusInfoResponse")
    public MnBatchStatusInfo getBatchStatusInfo(
        @WebParam(name = "idBatch", targetNamespace = "")
        String idBatch,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDeliveryStatus
     * @return
     *     returns it.giunti.apg.soap.magnews.MnDeliveryStatus
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDeliveryStatus", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetDeliveryStatus")
    @ResponseWrapper(localName = "getDeliveryStatusResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetDeliveryStatusResponse")
    public MnDeliveryStatus getDeliveryStatus(
        @WebParam(name = "idDeliveryStatus", targetNamespace = "")
        String idDeliveryStatus,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnDeliveryStatus>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDeliveryStatusForNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetDeliveryStatusForNewsletter")
    @ResponseWrapper(localName = "getDeliveryStatusForNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetDeliveryStatusForNewsletterResponse")
    public List<MnDeliveryStatus> getDeliveryStatusForNewsletter(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnFieldInfo>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFieldsByDatabase", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetFieldsByDatabase")
    @ResponseWrapper(localName = "getFieldsByDatabaseResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetFieldsByDatabaseResponse")
    public List<MnFieldInfo> getFieldsByDatabase(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnGroupInfo>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGroupsByDatabase", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetGroupsByDatabase")
    @ResponseWrapper(localName = "getGroupsByDatabaseResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetGroupsByDatabaseResponse")
    public List<MnGroupInfo> getGroupsByDatabase(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnList>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListsByDatabase", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetListsByDatabase")
    @ResponseWrapper(localName = "getListsByDatabaseResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetListsByDatabaseResponse")
    public List<MnList> getListsByDatabase(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idLaunch
     * @param idMessage
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.MnMessageStatus
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMessageStatus", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetMessageStatus")
    @ResponseWrapper(localName = "getMessageStatusResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetMessageStatusResponse")
    public MnMessageStatus getMessageStatus(
        @WebParam(name = "idLaunch", targetNamespace = "")
        String idLaunch,
        @WebParam(name = "idMessage", targetNamespace = "")
        String idMessage,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.MnNewsletterDetails
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNewsletterDetails", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetNewsletterDetails")
    @ResponseWrapper(localName = "getNewsletterDetailsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetNewsletterDetailsResponse")
    public MnNewsletterDetails getNewsletterDetails(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idContact
     * @param credentials
     * @param idNewsletter
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNewsletterWebVersionLink", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetNewsletterWebVersionLink")
    @ResponseWrapper(localName = "getNewsletterWebVersionLinkResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetNewsletterWebVersionLinkResponse")
    public String getNewsletterWebVersionLink(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "idContact", targetNamespace = "")
        String idContact,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idRowSet
     * @return
     *     returns it.giunti.apg.soap.magnews.MnRowSetInfo
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRowSetInfo", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetRowSetInfo")
    @ResponseWrapper(localName = "getRowSetInfoResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetRowSetInfoResponse")
    public MnRowSetInfo getRowSetInfo(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idMessage
     * @return
     *     returns it.giunti.apg.soap.magnews.MnSimpleMessageStatus
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSimpleMessageStatus", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetSimpleMessageStatus")
    @ResponseWrapper(localName = "getSimpleMessageStatusResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetSimpleMessageStatusResponse")
    public MnSimpleMessageStatus getSimpleMessageStatus(
        @WebParam(name = "idMessage", targetNamespace = "")
        String idMessage,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idWebPage
     * @param idContact
     * @param credentials
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getWebPageLink", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetWebPageLink")
    @ResponseWrapper(localName = "getWebPageLinkResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetWebPageLinkResponse")
    public String getWebPageLink(
        @WebParam(name = "idWebPage", targetNamespace = "")
        String idWebPage,
        @WebParam(name = "idContact", targetNamespace = "")
        String idContact,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param path
     * @param data
     * @param credentials
     * @param schemename
     * @param idNewsletter
     * @param options
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "fillNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FillNewsletter")
    @ResponseWrapper(localName = "fillNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FillNewsletterResponse")
    public void fillNewsletter(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "path", targetNamespace = "")
        String path,
        @WebParam(name = "schemename", targetNamespace = "")
        String schemename,
        @WebParam(name = "data", targetNamespace = "")
        FillNewsletterData data,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idWebPage
     * @param credentials
     * @param idContent
     * @param block
     * @param position
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "insertContentInWebPage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.InsertContentInWebPage")
    @ResponseWrapper(localName = "insertContentInWebPageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.InsertContentInWebPageResponse")
    public void insertContentInWebPage(
        @WebParam(name = "idContent", targetNamespace = "")
        String idContent,
        @WebParam(name = "idWebPage", targetNamespace = "")
        String idWebPage,
        @WebParam(name = "block", targetNamespace = "")
        String block,
        @WebParam(name = "position", targetNamespace = "")
        String position,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param values
     * @param idDatabase
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.MnContactOperation
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mergeContact", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.MergeContact")
    @ResponseWrapper(localName = "mergeContactResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.MergeContactResponse")
    public MnContactOperation mergeContact(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "values", targetNamespace = "")
        List<MnContactValue> values,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param mergeOptions
     * @param values
     * @param idNewsletter
     * @param idDatabase
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.MergeAndSendOperation
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mergeContactAndSendOnDemandMessage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.MergeContactAndSendOnDemandMessage")
    @ResponseWrapper(localName = "mergeContactAndSendOnDemandMessageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.MergeContactAndSendOnDemandMessageResponse")
    public MergeAndSendOperation mergeContactAndSendOnDemandMessage(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "values", targetNamespace = "")
        List<MnContactValue> values,
        @WebParam(name = "mergeOptions", targetNamespace = "")
        List<Option> mergeOptions,
        @WebParam(name = "options", targetNamespace = "")
        OnDemandMessageOptions options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param fieldName
     * @param credentials
     * @param idDatabase
     * @param value
     * @param operator
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryContactsByField", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContactsByField")
    @ResponseWrapper(localName = "queryContactsByFieldResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContactsByFieldResponse")
    public String queryContactsByField(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "fieldName", targetNamespace = "")
        String fieldName,
        @WebParam(name = "operator", targetNamespace = "")
        String operator,
        @WebParam(name = "value", targetNamespace = "")
        String value,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param filter
     * @param asc
     * @param credentials
     * @param idDatabase
     * @param options
     * @param orderBy
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryContactsByFilter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContactsByFilter")
    @ResponseWrapper(localName = "queryContactsByFilterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContactsByFilterResponse")
    public String queryContactsByFilter(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "filter", targetNamespace = "")
        Filter filter,
        @WebParam(name = "orderBy", targetNamespace = "")
        String orderBy,
        @WebParam(name = "asc", targetNamespace = "")
        boolean asc,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idGroup
     * @param credentials
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryContactsByGroup", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContactsByGroup")
    @ResponseWrapper(localName = "queryContactsByGroupResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContactsByGroupResponse")
    public String queryContactsByGroup(
        @WebParam(name = "idGroup", targetNamespace = "")
        String idGroup,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @param idList
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryContactsByList", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContactsByList")
    @ResponseWrapper(localName = "queryContactsByListResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContactsByListResponse")
    public String queryContactsByList(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "idList", targetNamespace = "")
        String idList,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @param idContacts
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryContactsReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContactsReport")
    @ResponseWrapper(localName = "queryContactsReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContactsReportResponse")
    public String queryContactsReport(
        @WebParam(name = "idContacts", targetNamespace = "")
        List<String> idContacts,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idCampaign
     * @param credentials
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryDeliveryStatus", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryDeliveryStatus")
    @ResponseWrapper(localName = "queryDeliveryStatusResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryDeliveryStatusResponse")
    public String queryDeliveryStatus(
        @WebParam(name = "idCampaign", targetNamespace = "")
        String idCampaign,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryDeliveries", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryDeliveries")
    @ResponseWrapper(localName = "queryDeliveriesResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryDeliveriesResponse")
    public String queryDeliveries(
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idContact
     * @param credentials
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryDetailedContactReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryDetailedContactReport")
    @ResponseWrapper(localName = "queryDetailedContactReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryDetailedContactReportResponse")
    public String queryDetailedContactReport(
        @WebParam(name = "idContact", targetNamespace = "")
        String idContact,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idContact
     * @param credentials
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryDetailedContactSMSReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryDetailedContactSMSReport")
    @ResponseWrapper(localName = "queryDetailedContactSMSReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryDetailedContactSMSReportResponse")
    public String queryDetailedContactSMSReport(
        @WebParam(name = "idContact", targetNamespace = "")
        String idContact,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryDetailedNewsletterReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryDetailedNewsletterReport")
    @ResponseWrapper(localName = "queryDetailedNewsletterReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryDetailedNewsletterReportResponse")
    public String queryDetailedNewsletterReport(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param showanonymous
     * @param idPage
     * @param from
     * @param to
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryFormSubmissions", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryFormSubmissions")
    @ResponseWrapper(localName = "queryFormSubmissionsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryFormSubmissionsResponse")
    public String queryFormSubmissions(
        @WebParam(name = "idPage", targetNamespace = "")
        String idPage,
        @WebParam(name = "from", targetNamespace = "")
        XMLGregorianCalendar from,
        @WebParam(name = "to", targetNamespace = "")
        XMLGregorianCalendar to,
        @WebParam(name = "showanonymous", targetNamespace = "")
        boolean showanonymous,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idCampaign
     * @param credentials
     * @param filterIdEditor
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryNewslettersByCampaign", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryNewslettersByCampaign")
    @ResponseWrapper(localName = "queryNewslettersByCampaignResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryNewslettersByCampaignResponse")
    public String queryNewslettersByCampaign(
        @WebParam(name = "idCampaign", targetNamespace = "")
        String idCampaign,
        @WebParam(name = "filterIdEditor", targetNamespace = "")
        String filterIdEditor,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idContact
     * @param credentials
     * @param idContent
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.Content
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "renderContent", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.RenderContent")
    @ResponseWrapper(localName = "renderContentResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.RenderContentResponse")
    public Content renderContent(
        @WebParam(name = "idContent", targetNamespace = "")
        String idContent,
        @WebParam(name = "idContact", targetNamespace = "")
        String idContact,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDeliveryStatus
     * @param action
     * @return
     *     returns it.giunti.apg.soap.magnews.MnDeliveryStatus
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "requestDeliveryStatusAction", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.RequestDeliveryStatusAction")
    @ResponseWrapper(localName = "requestDeliveryStatusActionResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.RequestDeliveryStatusActionResponse")
    public MnDeliveryStatus requestDeliveryStatusAction(
        @WebParam(name = "idDeliveryStatus", targetNamespace = "")
        String idDeliveryStatus,
        @WebParam(name = "action", targetNamespace = "")
        String action,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param event
     * @return
     *     returns boolean
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveContactEvent", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SaveContactEvent")
    @ResponseWrapper(localName = "saveContactEventResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SaveContactEventResponse")
    public boolean saveContactEvent(
        @WebParam(name = "event", targetNamespace = "")
        MnEvent event,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.SimpleMessageEvent>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     * @throws StatsException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSimpleMessageEvents", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetSimpleMessageEvents")
    @ResponseWrapper(localName = "getSimpleMessageEventsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetSimpleMessageEventsResponse")
    public List<SimpleMessageEvent> getSimpleMessageEvents(
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception, StatsException_Exception
    ;

    /**
     * 
     * @param headers
     * @param credentials
     * @param idNewsletter
     * @param options
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveNewsletterCustomHeaders", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SaveNewsletterCustomHeaders")
    @ResponseWrapper(localName = "saveNewsletterCustomHeadersResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SaveNewsletterCustomHeadersResponse")
    public void saveNewsletterCustomHeaders(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "headers", targetNamespace = "")
        List<FieldValue> headers,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param maxrows
     * @param credentials
     * @param criteria
     * @param options
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchContents", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SearchContents")
    @ResponseWrapper(localName = "searchContentsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SearchContentsResponse")
    public List<String> searchContents(
        @WebParam(name = "criteria", targetNamespace = "")
        List<FieldValue> criteria,
        @WebParam(name = "maxrows", targetNamespace = "")
        int maxrows,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param advancedOptions
     * @param idNewsletter
     * @param options
     * @param target
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendNewsletter")
    @ResponseWrapper(localName = "sendNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendNewsletterResponse")
    public String sendNewsletter(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "target", targetNamespace = "")
        List<String> target,
        @WebParam(name = "options", targetNamespace = "")
        MnSendOptions options,
        @WebParam(name = "advancedOptions", targetNamespace = "")
        List<Option> advancedOptions,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param address
     * @param credentials
     * @param options
     * @param newsletterID
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendSingleNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendSingleNewsletter")
    @ResponseWrapper(localName = "sendSingleNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendSingleNewsletterResponse")
    public String sendSingleNewsletter(
        @WebParam(name = "newsletterID", targetNamespace = "")
        String newsletterID,
        @WebParam(name = "address", targetNamespace = "")
        String address,
        @WebParam(name = "options", targetNamespace = "")
        SingleSendOptions options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param advancedOptions
     * @param idRowSet
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "startBatchContactsUpdate", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.StartBatchContactsUpdate")
    @ResponseWrapper(localName = "startBatchContactsUpdateResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.StartBatchContactsUpdateResponse")
    public String startBatchContactsUpdate(
        @WebParam(name = "idRowSet", targetNamespace = "")
        String idRowSet,
        @WebParam(name = "options", targetNamespace = "")
        MnBatchStartOptions options,
        @WebParam(name = "advancedOptions", targetNamespace = "")
        List<Option> advancedOptions,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idSubscriptionCause
     * @param idDatabase
     * @param idList
     * @param primaryKeyValue
     * @return
     *     returns it.giunti.apg.soap.magnews.MnContactOperation
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "subscribeContactToList", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SubscribeContactToList")
    @ResponseWrapper(localName = "subscribeContactToListResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SubscribeContactToListResponse")
    public MnContactOperation subscribeContactToList(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "primaryKeyValue", targetNamespace = "")
        String primaryKeyValue,
        @WebParam(name = "idList", targetNamespace = "")
        String idList,
        @WebParam(name = "idSubscriptionCause", targetNamespace = "")
        String idSubscriptionCause,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idUnsubscriptionCause
     * @param credentials
     * @param idDatabase
     * @param idList
     * @param primaryKeyValue
     * @return
     *     returns it.giunti.apg.soap.magnews.MnContactOperation
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "unsubscribeContactFromList", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UnsubscribeContactFromList")
    @ResponseWrapper(localName = "unsubscribeContactFromListResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UnsubscribeContactFromListResponse")
    public MnContactOperation unsubscribeContactFromList(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "primaryKeyValue", targetNamespace = "")
        String primaryKeyValue,
        @WebParam(name = "idList", targetNamespace = "")
        String idList,
        @WebParam(name = "idUnsubscriptionCause", targetNamespace = "")
        String idUnsubscriptionCause,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @param idCustomContentType
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateCustomContentType", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateCustomContentType")
    @ResponseWrapper(localName = "updateCustomContentTypeResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateCustomContentTypeResponse")
    public String updateCustomContentType(
        @WebParam(name = "idCustomContentType", targetNamespace = "")
        String idCustomContentType,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param fieldOptions
     * @param idDatabase
     * @param name
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.MnAlterSchemaResult
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateField", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateField")
    @ResponseWrapper(localName = "updateFieldResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateFieldResponse")
    public MnAlterSchemaResult updateField(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "fieldOptions", targetNamespace = "")
        MnFieldOptions fieldOptions,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @param options
     * @param idList
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateList", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateList")
    @ResponseWrapper(localName = "updateListResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateListResponse")
    public void updateList(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "idList", targetNamespace = "")
        String idList,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.BounceCategory>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "describeBounceCategories", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DescribeBounceCategories")
    @ResponseWrapper(localName = "describeBounceCategoriesResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DescribeBounceCategoriesResponse")
    public List<BounceCategory> describeBounceCategories(
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param query
     * @param options
     * @return
     *     returns int
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeUpdate", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.ExecuteUpdate")
    @ResponseWrapper(localName = "executeUpdateResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.ExecuteUpdateResponse")
    public int executeUpdate(
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param query
     * @param options
     * @param parameters
     * @return
     *     returns it.giunti.apg.soap.magnews.SqlResult
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeSql", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.ExecuteSql")
    @ResponseWrapper(localName = "executeSqlResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.ExecuteSqlResponse")
    public SqlResult executeSql(
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "parameters", targetNamespace = "")
        List<SqlParameter> parameters,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param query
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.SimpleQueryResult
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeSimpleQuery", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.ExecuteSimpleQuery")
    @ResponseWrapper(localName = "executeSimpleQueryResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.ExecuteSimpleQueryResponse")
    public SimpleQueryResult executeSimpleQuery(
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param fromDate
     * @param credentials
     * @param toDate
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnPlannedDelivery>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllPlannedDeliveries", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllPlannedDeliveries")
    @ResponseWrapper(localName = "getAllPlannedDeliveriesResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllPlannedDeliveriesResponse")
    public List<MnPlannedDelivery> getAllPlannedDeliveries(
        @WebParam(name = "fromDate", targetNamespace = "")
        XMLGregorianCalendar fromDate,
        @WebParam(name = "toDate", targetNamespace = "")
        XMLGregorianCalendar toDate,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnDeliveryPolicy>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllDeliveryPolicies", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllDeliveryPolicies")
    @ResponseWrapper(localName = "getAllDeliveryPoliciesResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllDeliveryPoliciesResponse")
    public List<MnDeliveryPolicy> getAllDeliveryPolicies(
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idMessageType
     * @param from
     * @param to
     * @param option
     * @return
     *     returns it.giunti.apg.soap.magnews.MnSimpleMessageTypeReport
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSimpleMessageTypeReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetSimpleMessageTypeReport")
    @ResponseWrapper(localName = "getSimpleMessageTypeReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetSimpleMessageTypeReportResponse")
    public MnSimpleMessageTypeReport getSimpleMessageTypeReport(
        @WebParam(name = "idMessageType", targetNamespace = "")
        String idMessageType,
        @WebParam(name = "from", targetNamespace = "")
        XMLGregorianCalendar from,
        @WebParam(name = "to", targetNamespace = "")
        XMLGregorianCalendar to,
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param contact
     * @param key
     * @param option
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.EnterWorkflowResult>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "enterWorkflow", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.EnterWorkflow")
    @ResponseWrapper(localName = "enterWorkflowResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.EnterWorkflowResponse")
    public List<EnterWorkflowResult> enterWorkflow(
        @WebParam(name = "contact", targetNamespace = "")
        List<EnterWorkflowData> contact,
        @WebParam(name = "key", targetNamespace = "")
        String key,
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idReport
     * @param credentials
     * @param fileId
     * @param option
     * @return
     *     returns byte[]
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "downloadReportAttachment", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DownloadReportAttachment")
    @ResponseWrapper(localName = "downloadReportAttachmentResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DownloadReportAttachmentResponse")
    public byte[] downloadReportAttachment(
        @WebParam(name = "idReport", targetNamespace = "")
        String idReport,
        @WebParam(name = "fileId", targetNamespace = "")
        String fileId,
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param values
     * @param idDatabase
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContactOperation>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "batchMergeContacts", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchMergeContacts")
    @ResponseWrapper(localName = "batchMergeContactsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.BatchMergeContactsResponse")
    public List<MnContactOperation> batchMergeContacts(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "values", targetNamespace = "")
        List<BatchMergeValues> values,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param query
     * @param idDatabase
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryContacts", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContacts")
    @ResponseWrapper(localName = "queryContactsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContactsResponse")
    public String queryContacts(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @param primaryKeyValue
     * @return
     *     returns it.giunti.apg.soap.magnews.MnContact
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findContactByPrimaryKey", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindContactByPrimaryKey")
    @ResponseWrapper(localName = "findContactByPrimaryKeyResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindContactByPrimaryKeyResponse")
    public MnContact findContactByPrimaryKey(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "primaryKeyValue", targetNamespace = "")
        String primaryKeyValue,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idContact
     * @param credentials
     * @return
     *     returns it.giunti.apg.soap.magnews.MnContact
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findContactById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindContactById")
    @ResponseWrapper(localName = "findContactByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindContactByIdResponse")
    public MnContact findContactById(
        @WebParam(name = "idContact", targetNamespace = "")
        String idContact,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param password
     * @param credentials
     * @param idDatabase
     * @param options
     * @param username
     * @return
     *     returns it.giunti.apg.soap.magnews.MnContact
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loginContact", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.LoginContact")
    @ResponseWrapper(localName = "loginContactResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.LoginContactResponse")
    public MnContact loginContact(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param fieldName
     * @param credentials
     * @param idDatabase
     * @param value
     * @param operator
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnContact>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findContactsByField", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindContactsByField")
    @ResponseWrapper(localName = "findContactsByFieldResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindContactsByFieldResponse")
    public List<MnContact> findContactsByField(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "fieldName", targetNamespace = "")
        String fieldName,
        @WebParam(name = "operator", targetNamespace = "")
        String operator,
        @WebParam(name = "value", targetNamespace = "")
        String value,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param query
     * @param idDatabase
     * @param options
     * @return
     *     returns int
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countContacts", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CountContacts")
    @ResponseWrapper(localName = "countContactsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CountContactsResponse")
    public int countContacts(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param query
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryNewsletters", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryNewsletters")
    @ResponseWrapper(localName = "queryNewslettersResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryNewslettersResponse")
    public String queryNewsletters(
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param values
     * @param idDatabase
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.MnContactOperation
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "subscribeContact", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SubscribeContact")
    @ResponseWrapper(localName = "subscribeContactResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SubscribeContactResponse")
    public MnContactOperation subscribeContact(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "values", targetNamespace = "")
        List<MnContactValue> values,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param values
     * @param idDatabase
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.MnContactOperation
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "unsubscribeContact", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UnsubscribeContact")
    @ResponseWrapper(localName = "unsubscribeContactResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UnsubscribeContactResponse")
    public MnContactOperation unsubscribeContact(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "values", targetNamespace = "")
        List<MnContactValue> values,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnDatabaseInfo>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllDatabases", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllDatabases")
    @ResponseWrapper(localName = "getAllDatabasesResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllDatabasesResponse")
    public List<MnDatabaseInfo> getAllDatabases(
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idDatabase
     * @return
     *     returns it.giunti.apg.soap.magnews.MnDatabaseInfo
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findDatabaseById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindDatabaseById")
    @ResponseWrapper(localName = "findDatabaseByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindDatabaseByIdResponse")
    public MnDatabaseInfo findDatabaseById(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idParentGroup
     * @param groupName
     * @param fieldName
     * @param credentials
     * @param idDatabase
     * @param value
     * @param operator
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSimpleGroup", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleGroup")
    @ResponseWrapper(localName = "createSimpleGroupResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleGroupResponse")
    public String createSimpleGroup(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "groupName", targetNamespace = "")
        String groupName,
        @WebParam(name = "fieldName", targetNamespace = "")
        String fieldName,
        @WebParam(name = "operator", targetNamespace = "")
        String operator,
        @WebParam(name = "value", targetNamespace = "")
        String value,
        @WebParam(name = "idParentGroup", targetNamespace = "")
        String idParentGroup,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idMessageCategory
     * @param option
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnSimpleMessageType>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllSimpleMessageTypes", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllSimpleMessageTypes")
    @ResponseWrapper(localName = "getAllSimpleMessageTypesResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllSimpleMessageTypesResponse")
    public List<MnSimpleMessageType> getAllSimpleMessageTypes(
        @WebParam(name = "idMessageCategory", targetNamespace = "")
        String idMessageCategory,
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idMessageType
     * @return
     *     returns it.giunti.apg.soap.magnews.MnSimpleMessageType
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSimpleMessageTypeById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindSimpleMessageTypeById")
    @ResponseWrapper(localName = "findSimpleMessageTypeByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindSimpleMessageTypeByIdResponse")
    public MnSimpleMessageType findSimpleMessageTypeById(
        @WebParam(name = "idMessageType", targetNamespace = "")
        String idMessageType,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param option
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnSimpleMessageCategory>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllSimpleMessageCategories", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllSimpleMessageCategories")
    @ResponseWrapper(localName = "getAllSimpleMessageCategoriesResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllSimpleMessageCategoriesResponse")
    public List<MnSimpleMessageCategory> getAllSimpleMessageCategories(
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idMessageCategory
     * @return
     *     returns it.giunti.apg.soap.magnews.MnSimpleMessageCategory
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSimpleMessageCategoryById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindSimpleMessageCategoryById")
    @ResponseWrapper(localName = "findSimpleMessageCategoryByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindSimpleMessageCategoryByIdResponse")
    public MnSimpleMessageCategory findSimpleMessageCategoryById(
        @WebParam(name = "idMessageCategory", targetNamespace = "")
        String idMessageCategory,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param name
     * @param idMessageCategory
     * @param option
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSimpleMessageType", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleMessageType")
    @ResponseWrapper(localName = "createSimpleMessageTypeResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleMessageTypeResponse")
    public String createSimpleMessageType(
        @WebParam(name = "idMessageCategory", targetNamespace = "")
        String idMessageCategory,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idMessageType
     * @param option
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateSimpleMessageType", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateSimpleMessageType")
    @ResponseWrapper(localName = "updateSimpleMessageTypeResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateSimpleMessageTypeResponse")
    public void updateSimpleMessageType(
        @WebParam(name = "idMessageType", targetNamespace = "")
        String idMessageType,
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param name
     * @param option
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSimpleMessageCategory", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleMessageCategory")
    @ResponseWrapper(localName = "createSimpleMessageCategoryResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateSimpleMessageCategoryResponse")
    public String createSimpleMessageCategory(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idMessageCategory
     * @param option
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateSimpleMessageCategory", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateSimpleMessageCategory")
    @ResponseWrapper(localName = "updateSimpleMessageCategoryResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateSimpleMessageCategoryResponse")
    public void updateSimpleMessageCategory(
        @WebParam(name = "idMessageCategory", targetNamespace = "")
        String idMessageCategory,
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idGroup
     * @param credentials
     * @return
     *     returns it.giunti.apg.soap.magnews.MnGroupInfo
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findGroupById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindGroupById")
    @ResponseWrapper(localName = "findGroupByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindGroupByIdResponse")
    public MnGroupInfo findGroupById(
        @WebParam(name = "idGroup", targetNamespace = "")
        String idGroup,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param query
     * @param idDatabase
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnGroupInfo>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryGroups", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryGroups")
    @ResponseWrapper(localName = "queryGroupsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryGroupsResponse")
    public List<MnGroupInfo> queryGroups(
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idGroup
     * @param credentials
     * @param options
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteGroup", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DeleteGroup")
    @ResponseWrapper(localName = "deleteGroupResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DeleteGroupResponse")
    public void deleteGroup(
        @WebParam(name = "idGroup", targetNamespace = "")
        String idGroup,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param address
     * @param credentials
     * @param idDatabase
     * @param contactPrimaryKey
     * @param messageTemplate
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendSimpleMessage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendSimpleMessage")
    @ResponseWrapper(localName = "sendSimpleMessageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendSimpleMessageResponse")
    public String sendSimpleMessage(
        @WebParam(name = "address", targetNamespace = "")
        String address,
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "contactPrimaryKey", targetNamespace = "")
        String contactPrimaryKey,
        @WebParam(name = "messageTemplate", targetNamespace = "")
        MessageTemplate messageTemplate,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @param idDatabase
     * @param options
     * @param contactPrimaryKey
     * @return
     *     returns it.giunti.apg.soap.magnews.OnDemandMessage
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendOnDemandMessage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendOnDemandMessage")
    @ResponseWrapper(localName = "sendOnDemandMessageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SendOnDemandMessageResponse")
    public OnDemandMessage sendOnDemandMessage(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "idDatabase", targetNamespace = "")
        String idDatabase,
        @WebParam(name = "contactPrimaryKey", targetNamespace = "")
        String contactPrimaryKey,
        @WebParam(name = "options", targetNamespace = "")
        OnDemandMessageOptions options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idCampaign
     * @param credentials
     * @return
     *     returns it.giunti.apg.soap.magnews.MnCampaign
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCampaignById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindCampaignById")
    @ResponseWrapper(localName = "findCampaignByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindCampaignByIdResponse")
    public MnCampaign findCampaignById(
        @WebParam(name = "idCampaign", targetNamespace = "")
        String idCampaign,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnCampaign>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCampaigns", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllCampaigns")
    @ResponseWrapper(localName = "getAllCampaignsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllCampaignsResponse")
    public List<MnCampaign> getAllCampaigns(
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param field
     * @param credentials
     * @param name
     * @param options
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createCampaign", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateCampaign")
    @ResponseWrapper(localName = "createCampaignResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateCampaignResponse")
    public String createCampaign(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "field", targetNamespace = "")
        List<FieldValue> field,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param field
     * @param idCampaign
     * @param credentials
     * @param options
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateCampaign", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateCampaign")
    @ResponseWrapper(localName = "updateCampaignResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateCampaignResponse")
    public void updateCampaign(
        @WebParam(name = "idCampaign", targetNamespace = "")
        String idCampaign,
        @WebParam(name = "field", targetNamespace = "")
        List<FieldValue> field,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @return
     *     returns it.giunti.apg.soap.magnews.MnNewsletter
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findNewsletterById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindNewsletterById")
    @ResponseWrapper(localName = "findNewsletterByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindNewsletterByIdResponse")
    public MnNewsletter findNewsletterById(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idCampaign
     * @param credentials
     * @param options
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnTemplateInfo>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllNewsletterTemplates", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllNewsletterTemplates")
    @ResponseWrapper(localName = "getAllNewsletterTemplatesResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllNewsletterTemplatesResponse")
    public List<MnTemplateInfo> getAllNewsletterTemplates(
        @WebParam(name = "idCampaign", targetNamespace = "")
        String idCampaign,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idSurvey
     * @param showuncompleted
     * @param showanonymous
     * @param from
     * @param to
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "querySurveySessions", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QuerySurveySessions")
    @ResponseWrapper(localName = "querySurveySessionsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QuerySurveySessionsResponse")
    public String querySurveySessions(
        @WebParam(name = "idSurvey", targetNamespace = "")
        String idSurvey,
        @WebParam(name = "from", targetNamespace = "")
        XMLGregorianCalendar from,
        @WebParam(name = "to", targetNamespace = "")
        XMLGregorianCalendar to,
        @WebParam(name = "showanonymous", targetNamespace = "")
        boolean showanonymous,
        @WebParam(name = "showuncompleted", targetNamespace = "")
        boolean showuncompleted,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param query
     * @param options
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryContents", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContents")
    @ResponseWrapper(localName = "queryContentsResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.QueryContentsResponse")
    public List<String> queryContents(
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param values
     * @param name
     * @param options
     * @param type
     * @return
     *     returns it.giunti.apg.soap.magnews.MnContentTag
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createContentTag", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateContentTag")
    @ResponseWrapper(localName = "createContentTagResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateContentTagResponse")
    public MnContentTag createContentTag(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "values", targetNamespace = "")
        List<String> values,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idPage
     * @return
     *     returns it.giunti.apg.soap.magnews.MnPage
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findWebPageById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindWebPageById")
    @ResponseWrapper(localName = "findWebPageByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindWebPageByIdResponse")
    public MnPage findWebPageById(
        @WebParam(name = "idPage", targetNamespace = "")
        String idPage,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @param idWebsite
     * @param content
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createWebPage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateWebPage")
    @ResponseWrapper(localName = "createWebPageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateWebPageResponse")
    public String createWebPage(
        @WebParam(name = "idWebsite", targetNamespace = "")
        String idWebsite,
        @WebParam(name = "content", targetNamespace = "")
        Content content,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idSurvey
     * @return
     *     returns it.giunti.apg.soap.magnews.MnSurvey
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSurveyById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindSurveyById")
    @ResponseWrapper(localName = "findSurveyByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindSurveyByIdResponse")
    public MnSurvey findSurveyById(
        @WebParam(name = "idSurvey", targetNamespace = "")
        String idSurvey,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idCampaign
     * @param credentials
     * @param options
     * @param content
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateNewsletter")
    @ResponseWrapper(localName = "createNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateNewsletterResponse")
    public String createNewsletter(
        @WebParam(name = "idCampaign", targetNamespace = "")
        String idCampaign,
        @WebParam(name = "content", targetNamespace = "")
        Content content,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idCampaign
     * @param credentials
     * @param name
     * @param options
     * @param idTemplate
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewsletterFromTemplate", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateNewsletterFromTemplate")
    @ResponseWrapper(localName = "createNewsletterFromTemplateResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateNewsletterFromTemplateResponse")
    public String createNewsletterFromTemplate(
        @WebParam(name = "idTemplate", targetNamespace = "")
        String idTemplate,
        @WebParam(name = "idCampaign", targetNamespace = "")
        String idCampaign,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DeleteNewsletter")
    @ResponseWrapper(localName = "deleteNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DeleteNewsletterResponse")
    public void deleteNewsletter(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param options
     * @param content
     * @return
     *     returns java.lang.String
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createContent", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateContent")
    @ResponseWrapper(localName = "createContentResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateContentResponse")
    public String createContent(
        @WebParam(name = "content", targetNamespace = "")
        Content content,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idContent
     * @param options
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteContent", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DeleteContent")
    @ResponseWrapper(localName = "deleteContentResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.DeleteContentResponse")
    public void deleteContent(
        @WebParam(name = "idContent", targetNamespace = "")
        String idContent,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idContent
     * @param idNewsletter
     * @param format
     * @param block
     * @param position
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "insertContentInNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.InsertContentInNewsletter")
    @ResponseWrapper(localName = "insertContentInNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.InsertContentInNewsletterResponse")
    public void insertContentInNewsletter(
        @WebParam(name = "idContent", targetNamespace = "")
        String idContent,
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "block", targetNamespace = "")
        String block,
        @WebParam(name = "position", targetNamespace = "")
        String position,
        @WebParam(name = "format", targetNamespace = "")
        String format,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param path
     * @param credentials
     * @param values
     * @param idNewsletter
     * @param position
     * @param contenttype
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "createContainerInNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateContainerInNewsletter")
    @ResponseWrapper(localName = "createContainerInNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.CreateContainerInNewsletterResponse")
    public void createContainerInNewsletter(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "path", targetNamespace = "")
        String path,
        @WebParam(name = "position", targetNamespace = "")
        String position,
        @WebParam(name = "contenttype", targetNamespace = "")
        String contenttype,
        @WebParam(name = "values", targetNamespace = "")
        List<FieldValue> values,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param path
     * @param credentials
     * @param values
     * @param idNewsletter
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateContainerValuesInNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateContainerValuesInNewsletter")
    @ResponseWrapper(localName = "updateContainerValuesInNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.UpdateContainerValuesInNewsletterResponse")
    public void updateContainerValuesInNewsletter(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "path", targetNamespace = "")
        String path,
        @WebParam(name = "values", targetNamespace = "")
        List<FieldValue> values,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param path
     * @param credentials
     * @param idNewsletter
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "clearContainerContentsInNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.ClearContainerContentsInNewsletter")
    @ResponseWrapper(localName = "clearContainerContentsInNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.ClearContainerContentsInNewsletterResponse")
    public void clearContainerContentsInNewsletter(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "path", targetNamespace = "")
        String path,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param idNewsletter
     * @param format
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getContentsInNewsletter", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetContentsInNewsletter")
    @ResponseWrapper(localName = "getContentsInNewsletterResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetContentsInNewsletterResponse")
    public List<String> getContentsInNewsletter(
        @WebParam(name = "idNewsletter", targetNamespace = "")
        String idNewsletter,
        @WebParam(name = "format", targetNamespace = "")
        String format,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idPlannedDelivery
     * @param credentials
     * @param options
     * @return
     *     returns it.giunti.apg.soap.magnews.MnPlannedDelivery
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findPlannedDeliveryById", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindPlannedDeliveryById")
    @ResponseWrapper(localName = "findPlannedDeliveryByIdResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.FindPlannedDeliveryByIdResponse")
    public MnPlannedDelivery findPlannedDeliveryById(
        @WebParam(name = "idPlannedDelivery", targetNamespace = "")
        String idPlannedDelivery,
        @WebParam(name = "options", targetNamespace = "")
        List<Option> options,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param msg
     * @param credentials
     * @return
     *     returns it.giunti.apg.soap.magnews.MnReceivedMessageResult
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveReceivedMessage", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SaveReceivedMessage")
    @ResponseWrapper(localName = "saveReceivedMessageResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.SaveReceivedMessageResponse")
    public MnReceivedMessageResult saveReceivedMessage(
        @WebParam(name = "msg", targetNamespace = "")
        MnReceivedMessage msg,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param reportType
     * @param credentials
     * @param option
     * @return
     *     returns it.giunti.apg.soap.magnews.ReportStatus
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "requestReport", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.RequestReport")
    @ResponseWrapper(localName = "requestReportResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.RequestReportResponse")
    public ReportStatus requestReport(
        @WebParam(name = "reportType", targetNamespace = "")
        String reportType,
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param idReport
     * @param credentials
     * @return
     *     returns it.giunti.apg.soap.magnews.ReportStatus
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReportStatus", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetReportStatus")
    @ResponseWrapper(localName = "getReportStatusResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetReportStatusResponse")
    public ReportStatus getReportStatus(
        @WebParam(name = "idReport", targetNamespace = "")
        String idReport,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

    /**
     * 
     * @param credentials
     * @param option
     * @return
     *     returns java.util.List<it.giunti.apg.soap.magnews.MnDeliverabilityCluster>
     * @throws AuthenticationFailedException_Exception
     * @throws ServiceNotAvailableException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllDeliverabilityClusters", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllDeliverabilityClusters")
    @ResponseWrapper(localName = "getAllDeliverabilityClustersResponse", targetNamespace = "http://webservices.magnews/", className = "it.giunti.apg.soap.magnews.GetAllDeliverabilityClustersResponse")
    public List<MnDeliverabilityCluster> getAllDeliverabilityClusters(
        @WebParam(name = "option", targetNamespace = "")
        List<Option> option,
        @WebParam(name = "credentials", targetNamespace = "")
        Credentials credentials)
        throws AuthenticationFailedException_Exception, ServiceNotAvailableException_Exception
    ;

}
